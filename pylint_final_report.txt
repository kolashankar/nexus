************* Module backend.locustfile
locustfile.py:20:12: W0201: Attribute 'token' defined outside __init__ (attribute-defined-outside-init)
locustfile.py:36:16: W0201: Attribute 'token' defined outside __init__ (attribute-defined-outside-init)
locustfile.py:21:12: W0201: Attribute 'headers' defined outside __init__ (attribute-defined-outside-init)
locustfile.py:37:16: W0201: Attribute 'headers' defined outside __init__ (attribute-defined-outside-init)
locustfile.py:105:12: W0201: Attribute 'token' defined outside __init__ (attribute-defined-outside-init)
locustfile.py:106:12: W0201: Attribute 'headers' defined outside __init__ (attribute-defined-outside-init)
locustfile.py:4:0: C0411: standard import "random" should be placed before third party import "locust.HttpUser" (wrong-import-order)
************* Module backend.server_minimal
server_minimal.py:23:0: C0116: Missing function or method docstring (missing-function-docstring)
server_minimal.py:27:0: C0116: Missing function or method docstring (missing-function-docstring)
server_minimal.py:31:0: C0116: Missing function or method docstring (missing-function-docstring)
************* Module backend.server
server.py:5:0: E0401: Unable to import 'api.v1' (import-error)
************* Module backend.tests.__init__
tests/__init__.py:1:0: C0304: Final newline missing (missing-final-newline)
************* Module backend.tests.conftest
tests/conftest.py:1:0: C0114: Missing module docstring (missing-module-docstring)
tests/conftest.py:9:0: E0401: Unable to import 'server' (import-error)
tests/conftest.py:28:4: W0621: Redefining name 'client' from outer scope (line 49) (redefined-outer-name)
tests/conftest.py:37:18: W0621: Redefining name 'test_db_client' from outer scope (line 25) (redefined-outer-name)
tests/conftest.py:49:17: W0621: Redefining name 'test_db' from outer scope (line 37) (redefined-outer-name)
tests/conftest.py:61:20: W0621: Redefining name 'test_db' from outer scope (line 37) (redefined-outer-name)
tests/conftest.py:63:4: E0401: Unable to import 'core.security' (import-error)
tests/conftest.py:103:21: W0621: Redefining name 'client' from outer scope (line 49) (redefined-outer-name)
tests/conftest.py:103:29: W0621: Redefining name 'test_user' from outer scope (line 61) (redefined-outer-name)
tests/conftest.py:103:29: W0613: Unused argument 'test_user' (unused-argument)
tests/conftest.py:118:23: W0621: Redefining name 'auth_token' from outer scope (line 103) (redefined-outer-name)
tests/conftest.py:124:21: W0621: Redefining name 'test_db' from outer scope (line 37) (redefined-outer-name)
tests/conftest.py:124:30: W0621: Redefining name 'test_user' from outer scope (line 61) (redefined-outer-name)
tests/conftest.py:147:21: W0621: Redefining name 'test_db' from outer scope (line 37) (redefined-outer-name)
tests/conftest.py:147:30: W0621: Redefining name 'test_user' from outer scope (line 61) (redefined-outer-name)
tests/conftest.py:179:21: W0621: Redefining name 'test_db' from outer scope (line 37) (redefined-outer-name)
tests/conftest.py:179:30: W0621: Redefining name 'test_user' from outer scope (line 61) (redefined-outer-name)
tests/conftest.py:2:0: C0411: standard import "asyncio" should be placed before third party import "pytest" (wrong-import-order)
tests/conftest.py:3:0: C0411: standard import "typing.AsyncGenerator" should be placed before third party import "pytest" (wrong-import-order)
tests/conftest.py:6:0: C0411: standard import "os" should be placed before third party imports "pytest", "motor.motor_asyncio.AsyncIOMotorClient", "httpx.AsyncClient" (wrong-import-order)
************* Module backend.tests.performance.__init__
tests/performance/__init__.py:1:0: C0304: Final newline missing (missing-final-newline)
************* Module backend.tests.performance.test_stress
tests/performance/test_stress.py:41:4: E0401: Unable to import 'psutil' (import-error)
tests/performance/test_stress.py:4:0: C0411: standard import "asyncio" should be placed before third party import "pytest" (wrong-import-order)
tests/performance/test_stress.py:5:0: C0411: standard import "time" should be placed before third party import "pytest" (wrong-import-order)
************* Module backend.tests.performance.test_load
tests/performance/test_load.py:4:0: C0411: standard import "asyncio" should be placed before third party import "pytest" (wrong-import-order)
tests/performance/test_load.py:5:0: C0411: standard import "time" should be placed before third party import "pytest" (wrong-import-order)
tests/performance/test_load.py:6:0: C0411: standard import "statistics.mean" should be placed before third party import "pytest" (wrong-import-order)
************* Module backend.tests.performance.locustfile
tests/performance/locustfile.py:98:0: C0304: Final newline missing (missing-final-newline)
tests/performance/locustfile.py:98:8: W0107: Unnecessary pass statement (unnecessary-pass)
tests/performance/locustfile.py:3:0: C0411: standard import "random" should be placed before third party import "locust.HttpUser" (wrong-import-order)
************* Module backend.tests.integration.__init__
tests/integration/__init__.py:1:0: C0304: Final newline missing (missing-final-newline)
************* Module backend.tests.integration.test_social_flow
tests/integration/test_social_flow.py:182:0: C0304: Final newline missing (missing-final-newline)
************* Module backend.tests.integration.test_combat_flow
tests/integration/test_combat_flow.py:131:0: C0304: Final newline missing (missing-final-newline)
tests/integration/test_combat_flow.py:55:8: E0401: Unable to import 'backend.utils.auth' (import-error)
tests/integration/test_combat_flow.py:55:8: E0611: No name 'auth' in module 'backend.utils' (no-name-in-module)
************* Module backend.tests.integration.test_market_flow
tests/integration/test_market_flow.py:165:0: C0304: Final newline missing (missing-final-newline)
************* Module backend.tests.integration.test_robot_flow
tests/integration/test_robot_flow.py:172:0: C0304: Final newline missing (missing-final-newline)
************* Module backend.tests.integration.test_auth_flow
tests/integration/test_auth_flow.py:79:0: C0304: Final newline missing (missing-final-newline)
tests/integration/test_auth_flow.py:11:43: W0613: Unused argument 'clean_db' (unused-argument)
************* Module backend.tests.integration.test_leaderboards
tests/integration/test_leaderboards.py:124:0: C0304: Final newline missing (missing-final-newline)
************* Module backend.tests.integration.test_guild_flow
tests/integration/test_guild_flow.py:148:0: C0304: Final newline missing (missing-final-newline)
tests/integration/test_guild_flow.py:11:52: W0613: Unused argument 'clean_db' (unused-argument)
************* Module backend.tests.integration.test_quest_flow
tests/integration/test_quest_flow.py:149:0: C0304: Final newline missing (missing-final-newline)
tests/integration/test_quest_flow.py:11:61: W0613: Unused argument 'clean_db' (unused-argument)
************* Module backend.tests.integration.test_action_flow
tests/integration/test_action_flow.py:179:0: C0304: Final newline missing (missing-final-newline)
tests/integration/test_action_flow.py:11:67: W0613: Unused argument 'test_player' (unused-argument)
************* Module backend.tests.unit.__init__
tests/unit/__init__.py:1:0: C0304: Final newline missing (missing-final-newline)
************* Module backend.tests.unit.test_guilds
tests/unit/test_guilds.py:170:0: C0304: Final newline missing (missing-final-newline)
tests/unit/test_guilds.py:3:0: E0611: No name 'GuildService' in module 'backend.services.guilds.management' (no-name-in-module)
************* Module backend.tests.unit.test_auth
tests/unit/test_auth.py:78:0: C0304: Final newline missing (missing-final-newline)
tests/unit/test_auth.py:3:0: E0401: Unable to import 'backend.utils.auth' (import-error)
tests/unit/test_auth.py:3:0: E0611: No name 'auth' in module 'backend.utils' (no-name-in-module)
tests/unit/test_auth.py:4:0: C0411: standard import "datetime.timedelta" should be placed before third party import "pytest" and first party import "backend.utils.auth.hash_password"  (wrong-import-order)
************* Module backend.tests.unit.test_karma
tests/unit/test_karma.py:126:0: C0304: Final newline missing (missing-final-newline)
tests/unit/test_karma.py:12:23: E1101: Instance of 'KarmaCalculator' has no 'calculate_action_karma' member (no-member)
tests/unit/test_karma.py:25:23: E1101: Instance of 'KarmaCalculator' has no 'calculate_action_karma' member (no-member)
tests/unit/test_karma.py:38:21: E1101: Instance of 'KarmaCalculator' has no 'calculate_action_karma' member (no-member)
tests/unit/test_karma.py:45:21: E1101: Instance of 'KarmaCalculator' has no 'calculate_action_karma' member (no-member)
tests/unit/test_karma.py:58:21: E1101: Instance of 'KarmaCalculator' has no 'calculate_action_karma' member (no-member)
tests/unit/test_karma.py:65:21: E1101: Instance of 'KarmaCalculator' has no 'calculate_action_karma' member (no-member)
tests/unit/test_karma.py:78:22: E1101: Instance of 'KarmaCalculator' has no 'calculate_action_karma' member (no-member)
tests/unit/test_karma.py:85:22: E1101: Instance of 'KarmaCalculator' has no 'calculate_action_karma' member (no-member)
tests/unit/test_karma.py:102:22: E1123: Unexpected keyword argument 'karma' in method call (unexpected-keyword-arg)
tests/unit/test_karma.py:102:22: E1120: No value for argument 'karma_points' in method call (no-value-for-parameter)
tests/unit/test_karma.py:109:22: E1123: Unexpected keyword argument 'karma' in method call (unexpected-keyword-arg)
tests/unit/test_karma.py:109:22: E1120: No value for argument 'karma_points' in method call (no-value-for-parameter)
tests/unit/test_karma.py:116:22: E1123: Unexpected keyword argument 'karma' in method call (unexpected-keyword-arg)
tests/unit/test_karma.py:116:22: E1120: No value for argument 'karma_points' in method call (no-value-for-parameter)
************* Module backend.tests.unit.test_superpowers
tests/unit/test_superpowers.py:151:0: C0304: Final newline missing (missing-final-newline)
tests/unit/test_superpowers.py:4:0: E0611: No name 'SUPERPOWER_REQUIREMENTS' in module 'backend.models.player.superpowers' (no-name-in-module)
tests/unit/test_superpowers.py:20:21: E1101: Instance of 'SuperpowerService' has no 'can_unlock_power' member (no-member)
tests/unit/test_superpowers.py:32:21: E1101: Instance of 'SuperpowerService' has no 'can_unlock_power' member (no-member)
tests/unit/test_superpowers.py:49:15: E1136: Value 'updated_powers[0]' is unsubscriptable (unsubscriptable-object)
tests/unit/test_superpowers.py:50:15: E1136: Value 'updated_powers[0]' is unsubscriptable (unsubscriptable-object)
tests/unit/test_superpowers.py:97:20: E1121: Too many positional arguments for staticmethod call (too-many-function-args)
tests/unit/test_superpowers.py:118:24: E1120: No value for argument 'power_id' in staticmethod call (no-value-for-parameter)
tests/unit/test_superpowers.py:120:15: E1126: Sequence index is not an int, slice, or instance with __index__ (invalid-sequence-index)
tests/unit/test_superpowers.py:121:15: E1126: Sequence index is not an int, slice, or instance with __index__ (invalid-sequence-index)
tests/unit/test_superpowers.py:135:18: E1101: Instance of 'SuperpowerService' has no 'is_power_available' member (no-member)
tests/unit/test_superpowers.py:150:18: E1101: Instance of 'SuperpowerService' has no 'is_power_available' member (no-member)
************* Module backend.tests.unit.test_combat
tests/unit/test_combat.py:139:0: C0304: Final newline missing (missing-final-newline)
tests/unit/test_combat.py:3:0: E0611: No name 'calculate_combat_stats' in module 'backend.models.combat.stats' (no-name-in-module)
tests/unit/test_combat.py:57:17: E1123: Unexpected keyword argument 'ability_modifier' in method call (unexpected-keyword-arg)
tests/unit/test_combat.py:86:24: E1123: Unexpected keyword argument 'ability_modifier' in method call (unexpected-keyword-arg)
tests/unit/test_combat.py:92:25: E1123: Unexpected keyword argument 'ability_modifier' in method call (unexpected-keyword-arg)
tests/unit/test_combat.py:120:17: E1101: Instance of 'CombatCalculator' has no 'execute_attack' member (no-member)
tests/unit/test_combat.py:137:17: E1101: Instance of 'CombatCalculator' has no 'execute_attack' member (no-member)
************* Module backend.tests.unit.test_robots
tests/unit/test_robots.py:114:0: C0304: Final newline missing (missing-final-newline)
tests/unit/test_robots.py:3:0: E0611: No name 'ROBOT_TYPES' in module 'backend.models.robots.robot' (no-name-in-module)
tests/unit/test_robots.py:13:16: E1123: Unexpected keyword argument 'owner_id' in method call (unexpected-keyword-arg)
tests/unit/test_robots.py:13:16: E1120: No value for argument 'robot_type' in method call (no-value-for-parameter)
tests/unit/test_robots.py:24:16: E1123: Unexpected keyword argument 'owner_id' in method call (unexpected-keyword-arg)
tests/unit/test_robots.py:24:16: E1120: No value for argument 'robot_type' in method call (no-value-for-parameter)
tests/unit/test_robots.py:34:17: E1123: Unexpected keyword argument 'owner_id' in method call (unexpected-keyword-arg)
tests/unit/test_robots.py:34:17: E1120: No value for argument 'robot_type' in method call (no-value-for-parameter)
tests/unit/test_robots.py:35:17: E1123: Unexpected keyword argument 'owner_id' in method call (unexpected-keyword-arg)
tests/unit/test_robots.py:35:17: E1120: No value for argument 'robot_type' in method call (no-value-for-parameter)
tests/unit/test_robots.py:44:16: E1123: Unexpected keyword argument 'owner_id' in method call (unexpected-keyword-arg)
tests/unit/test_robots.py:44:16: E1120: No value for argument 'robot_type' in method call (no-value-for-parameter)
tests/unit/test_robots.py:56:16: E1123: Unexpected keyword argument 'owner_id' in method call (unexpected-keyword-arg)
tests/unit/test_robots.py:56:16: E1120: No value for argument 'robot_type' in method call (no-value-for-parameter)
tests/unit/test_robots.py:59:16: E1101: Instance of 'RobotFactory' has no 'train_robot' member (no-member)
tests/unit/test_robots.py:66:16: E1123: Unexpected keyword argument 'owner_id' in method call (unexpected-keyword-arg)
tests/unit/test_robots.py:66:16: E1120: No value for argument 'robot_type' in method call (no-value-for-parameter)
tests/unit/test_robots.py:69:16: E1101: Instance of 'RobotFactory' has no 'train_robot' member (no-member)
tests/unit/test_robots.py:76:16: E1123: Unexpected keyword argument 'owner_id' in method call (unexpected-keyword-arg)
tests/unit/test_robots.py:76:16: E1120: No value for argument 'robot_type' in method call (no-value-for-parameter)
tests/unit/test_robots.py:81:16: E1101: Instance of 'RobotFactory' has no 'train_robot' member (no-member)
tests/unit/test_robots.py:94:17: E1123: Unexpected keyword argument 'owner_id' in method call (unexpected-keyword-arg)
tests/unit/test_robots.py:94:17: E1120: No value for argument 'robot_type' in method call (no-value-for-parameter)
tests/unit/test_robots.py:95:17: E1123: Unexpected keyword argument 'owner_id' in method call (unexpected-keyword-arg)
tests/unit/test_robots.py:95:17: E1120: No value for argument 'robot_type' in method call (no-value-for-parameter)
tests/unit/test_robots.py:97:16: E1101: Instance of 'RobotFactory' has no 'fuse_robots' member (no-member)
tests/unit/test_robots.py:106:17: E1123: Unexpected keyword argument 'owner_id' in method call (unexpected-keyword-arg)
tests/unit/test_robots.py:106:17: E1120: No value for argument 'robot_type' in method call (no-value-for-parameter)
tests/unit/test_robots.py:109:17: E1123: Unexpected keyword argument 'owner_id' in method call (unexpected-keyword-arg)
tests/unit/test_robots.py:109:17: E1120: No value for argument 'robot_type' in method call (no-value-for-parameter)
tests/unit/test_robots.py:112:16: E1101: Instance of 'RobotFactory' has no 'fuse_robots' member (no-member)
************* Module backend.tests.unit.test_traits
tests/unit/test_traits.py:111:0: C0304: Final newline missing (missing-final-newline)
tests/unit/test_traits.py:2:0: E0611: No name 'TraitService' in module 'backend.services.player.traits' (no-name-in-module)
tests/unit/test_traits.py:3:0: E0611: No name 'initialize_traits' in module 'backend.models.player.player' (no-name-in-module)
tests/unit/test_traits.py:3:0: E0611: No name 'VIRTUES' in module 'backend.models.player.player' (no-name-in-module)
tests/unit/test_traits.py:3:0: E0611: No name 'VICES' in module 'backend.models.player.player' (no-name-in-module)
tests/unit/test_traits.py:3:0: E0611: No name 'SKILLS' in module 'backend.models.player.player' (no-name-in-module)
************* Module backend.tests.e2e.__init__
tests/e2e/__init__.py:1:0: C0304: Final newline missing (missing-final-newline)
************* Module backend.tests.e2e.test_combat_tournament
tests/e2e/test_combat_tournament.py:63:0: C0304: Final newline missing (missing-final-newline)
************* Module backend.tests.e2e.test_player_journey
tests/e2e/test_player_journey.py:81:0: C0304: Final newline missing (missing-final-newline)
************* Module backend.tests.e2e.test_progression
tests/e2e/test_progression.py:60:0: C0304: Final newline missing (missing-final-newline)
tests/e2e/test_progression.py:42:16: W0612: Unused variable 'i' (unused-variable)
************* Module backend.tests.e2e.test_economy
tests/e2e/test_economy.py:74:0: C0304: Final newline missing (missing-final-newline)
************* Module backend.tests.e2e.test_guild_war
tests/e2e/test_guild_war.py:75:0: C0304: Final newline missing (missing-final-newline)
tests/e2e/test_guild_war.py:11:44: W0613: Unused argument 'clean_db' (unused-argument)
************* Module backend.tasks.world_events_task
tasks/world_events_task.py:6:0: E0611: No name 'get_settings' in module 'backend.core.config' (no-name-in-module)
tasks/world_events_task.py:33:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
tasks/world_events_task.py:41:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
tasks/world_events_task.py:44:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
************* Module backend.tasks.seasonal_tasks
tasks/seasonal_tasks.py:36:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
tasks/seasonal_tasks.py:47:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
tasks/seasonal_tasks.py:51:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
tasks/seasonal_tasks.py:55:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
tasks/seasonal_tasks.py:69:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
tasks/seasonal_tasks.py:77:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
tasks/seasonal_tasks.py:85:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
tasks/seasonal_tasks.py:94:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
tasks/seasonal_tasks.py:104:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
tasks/seasonal_tasks.py:129:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
tasks/seasonal_tasks.py:9:0: C0411: standard import "logging" should be placed before first party imports "backend.core.database.db", "backend.services.seasonal.battle_pass.BattlePassService", "backend.services.seasonal.seasons.SeasonService", "backend.services.world.events.WorldEventsService"  (wrong-import-order)
************* Module backend.tasks.cache_warmer
tasks/cache_warmer.py:44:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
tasks/cache_warmer.py:52:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
tasks/cache_warmer.py:57:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
************* Module backend.tasks.world_state_sync_task
tasks/world_state_sync_task.py:6:0: E0611: No name 'get_settings' in module 'backend.core.config' (no-name-in-module)
tasks/world_state_sync_task.py:32:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
tasks/world_state_sync_task.py:40:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
************* Module backend.tasks.quest_generator
tasks/quest_generator.py:37:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
tasks/quest_generator.py:51:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
************* Module backend.tasks.karma_processor
tasks/karma_processor.py:23:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
tasks/karma_processor.py:34:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
tasks/karma_processor.py:43:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
tasks/karma_processor.py:63:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
tasks/karma_processor.py:67:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
************* Module backend.middleware.rate_limit
middleware/rate_limit.py:3:0: C0411: standard import "datetime.datetime" should be placed before third party import "fastapi.Request" (wrong-import-order)
middleware/rate_limit.py:4:0: C0411: standard import "collections.defaultdict" should be placed before third party import "fastapi.Request" (wrong-import-order)
middleware/rate_limit.py:5:0: C0411: standard import "typing.Dict" should be placed before third party import "fastapi.Request" (wrong-import-order)
************* Module backend.middleware.metrics_middleware
middleware/metrics_middleware.py:7:0: C0411: standard import "uuid" should be placed before third party imports "fastapi.Request", "starlette.middleware.base.BaseHTTPMiddleware", "starlette.types.ASGIApp" (wrong-import-order)
************* Module backend.middleware.error_handler
middleware/error_handler.py:11:33: W0613: Unused argument 'request' (unused-argument)
middleware/error_handler.py:18:39: W0613: Unused argument 'request' (unused-argument)
middleware/error_handler.py:30:4: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
middleware/error_handler.py:28:36: W0613: Unused argument 'request' (unused-argument)
middleware/error_handler.py:7:0: C0411: standard import "logging" should be placed before third party imports "fastapi.Request", "fastapi.responses.JSONResponse", "fastapi.exceptions.RequestValidationError", "starlette.exceptions.HTTPException" (wrong-import-order)
************* Module backend.middleware.cache_middleware
middleware/cache_middleware.py:19:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
middleware/cache_middleware.py:6:0: C0411: standard import "typing.Callable" should be placed before third party imports "fastapi.Request", "starlette.middleware.base.BaseHTTPMiddleware" (wrong-import-order)
************* Module backend.middleware.quest_middleware
middleware/quest_middleware.py:4:0: C0411: standard import "typing.Callable" should be placed before third party import "fastapi.Request" (wrong-import-order)
************* Module backend.config.superpower_definitions
config/superpower_definitions.py:9:0: C0115: Missing class docstring (missing-class-docstring)
************* Module backend.config.skill_tree_nodes
config/skill_tree_nodes.py:189:0: C0301: Line too long (136/120) (line-too-long)
config/skill_tree_nodes.py:215:0: C0301: Line too long (126/120) (line-too-long)
config/skill_tree_nodes.py:222:0: C0116: Missing function or method docstring (missing-function-docstring)
config/skill_tree_nodes.py:222:31: C0321: More than one statement on a single line (multiple-statements)
config/skill_tree_nodes.py:224:0: C0116: Missing function or method docstring (missing-function-docstring)
config/skill_tree_nodes.py:224:32: C0321: More than one statement on a single line (multiple-statements)
config/skill_tree_nodes.py:226:0: C0116: Missing function or method docstring (missing-function-docstring)
config/skill_tree_nodes.py:226:32: C0321: More than one statement on a single line (multiple-statements)
config/skill_tree_nodes.py:228:0: C0116: Missing function or method docstring (missing-function-docstring)
config/skill_tree_nodes.py:228:32: C0321: More than one statement on a single line (multiple-statements)
config/skill_tree_nodes.py:230:0: C0116: Missing function or method docstring (missing-function-docstring)
config/skill_tree_nodes.py:230:31: C0321: More than one statement on a single line (multiple-statements)
config/skill_tree_nodes.py:232:0: C0116: Missing function or method docstring (missing-function-docstring)
config/skill_tree_nodes.py:232:30: C0321: More than one statement on a single line (multiple-statements)
config/skill_tree_nodes.py:234:0: C0116: Missing function or method docstring (missing-function-docstring)
config/skill_tree_nodes.py:234:29: C0321: More than one statement on a single line (multiple-statements)
config/skill_tree_nodes.py:236:0: C0116: Missing function or method docstring (missing-function-docstring)
config/skill_tree_nodes.py:236:30: C0321: More than one statement on a single line (multiple-statements)
config/skill_tree_nodes.py:238:0: C0116: Missing function or method docstring (missing-function-docstring)
config/skill_tree_nodes.py:238:34: C0321: More than one statement on a single line (multiple-statements)
config/skill_tree_nodes.py:240:0: C0116: Missing function or method docstring (missing-function-docstring)
config/skill_tree_nodes.py:240:28: C0321: More than one statement on a single line (multiple-statements)
config/skill_tree_nodes.py:242:0: C0116: Missing function or method docstring (missing-function-docstring)
config/skill_tree_nodes.py:242:30: C0321: More than one statement on a single line (multiple-statements)
config/skill_tree_nodes.py:244:0: C0116: Missing function or method docstring (missing-function-docstring)
config/skill_tree_nodes.py:244:28: C0321: More than one statement on a single line (multiple-statements)
config/skill_tree_nodes.py:246:0: C0116: Missing function or method docstring (missing-function-docstring)
config/skill_tree_nodes.py:246:29: C0321: More than one statement on a single line (multiple-statements)
config/skill_tree_nodes.py:248:0: C0116: Missing function or method docstring (missing-function-docstring)
config/skill_tree_nodes.py:248:29: C0321: More than one statement on a single line (multiple-statements)
config/skill_tree_nodes.py:250:0: C0116: Missing function or method docstring (missing-function-docstring)
config/skill_tree_nodes.py:250:32: C0321: More than one statement on a single line (multiple-statements)
config/skill_tree_nodes.py:252:0: C0116: Missing function or method docstring (missing-function-docstring)
config/skill_tree_nodes.py:252:36: C0321: More than one statement on a single line (multiple-statements)
config/skill_tree_nodes.py:254:0: C0116: Missing function or method docstring (missing-function-docstring)
config/skill_tree_nodes.py:254:31: C0321: More than one statement on a single line (multiple-statements)
config/skill_tree_nodes.py:256:0: C0116: Missing function or method docstring (missing-function-docstring)
config/skill_tree_nodes.py:256:30: C0321: More than one statement on a single line (multiple-statements)
config/skill_tree_nodes.py:258:0: C0116: Missing function or method docstring (missing-function-docstring)
config/skill_tree_nodes.py:258:33: C0321: More than one statement on a single line (multiple-statements)
config/skill_tree_nodes.py:262:0: C0116: Missing function or method docstring (missing-function-docstring)
config/skill_tree_nodes.py:262:27: C0321: More than one statement on a single line (multiple-statements)
config/skill_tree_nodes.py:264:0: C0116: Missing function or method docstring (missing-function-docstring)
config/skill_tree_nodes.py:264:31: C0321: More than one statement on a single line (multiple-statements)
config/skill_tree_nodes.py:266:0: C0116: Missing function or method docstring (missing-function-docstring)
config/skill_tree_nodes.py:266:28: C0321: More than one statement on a single line (multiple-statements)
config/skill_tree_nodes.py:268:0: C0116: Missing function or method docstring (missing-function-docstring)
config/skill_tree_nodes.py:268:29: C0321: More than one statement on a single line (multiple-statements)
config/skill_tree_nodes.py:270:0: C0116: Missing function or method docstring (missing-function-docstring)
config/skill_tree_nodes.py:270:33: C0321: More than one statement on a single line (multiple-statements)
config/skill_tree_nodes.py:272:0: C0116: Missing function or method docstring (missing-function-docstring)
config/skill_tree_nodes.py:272:26: C0321: More than one statement on a single line (multiple-statements)
config/skill_tree_nodes.py:273:0: C0116: Missing function or method docstring (missing-function-docstring)
config/skill_tree_nodes.py:273:27: C0321: More than one statement on a single line (multiple-statements)
config/skill_tree_nodes.py:275:0: C0116: Missing function or method docstring (missing-function-docstring)
config/skill_tree_nodes.py:275:31: C0321: More than one statement on a single line (multiple-statements)
config/skill_tree_nodes.py:277:0: C0116: Missing function or method docstring (missing-function-docstring)
config/skill_tree_nodes.py:277:30: C0321: More than one statement on a single line (multiple-statements)
config/skill_tree_nodes.py:279:0: C0116: Missing function or method docstring (missing-function-docstring)
config/skill_tree_nodes.py:279:30: C0321: More than one statement on a single line (multiple-statements)
config/skill_tree_nodes.py:281:0: C0116: Missing function or method docstring (missing-function-docstring)
config/skill_tree_nodes.py:281:30: C0321: More than one statement on a single line (multiple-statements)
config/skill_tree_nodes.py:283:0: C0116: Missing function or method docstring (missing-function-docstring)
config/skill_tree_nodes.py:283:35: C0321: More than one statement on a single line (multiple-statements)
config/skill_tree_nodes.py:285:0: C0116: Missing function or method docstring (missing-function-docstring)
config/skill_tree_nodes.py:285:34: C0321: More than one statement on a single line (multiple-statements)
config/skill_tree_nodes.py:287:0: C0116: Missing function or method docstring (missing-function-docstring)
config/skill_tree_nodes.py:287:34: C0321: More than one statement on a single line (multiple-statements)
config/skill_tree_nodes.py:289:0: C0116: Missing function or method docstring (missing-function-docstring)
config/skill_tree_nodes.py:289:31: C0321: More than one statement on a single line (multiple-statements)
config/skill_tree_nodes.py:291:0: C0116: Missing function or method docstring (missing-function-docstring)
config/skill_tree_nodes.py:291:30: C0321: More than one statement on a single line (multiple-statements)
config/skill_tree_nodes.py:293:0: C0116: Missing function or method docstring (missing-function-docstring)
config/skill_tree_nodes.py:293:34: C0321: More than one statement on a single line (multiple-statements)
config/skill_tree_nodes.py:295:0: C0116: Missing function or method docstring (missing-function-docstring)
config/skill_tree_nodes.py:295:31: C0321: More than one statement on a single line (multiple-statements)
config/skill_tree_nodes.py:297:0: C0116: Missing function or method docstring (missing-function-docstring)
config/skill_tree_nodes.py:297:34: C0321: More than one statement on a single line (multiple-statements)
config/skill_tree_nodes.py:299:0: C0116: Missing function or method docstring (missing-function-docstring)
config/skill_tree_nodes.py:299:28: C0321: More than one statement on a single line (multiple-statements)
config/skill_tree_nodes.py:303:0: C0116: Missing function or method docstring (missing-function-docstring)
config/skill_tree_nodes.py:303:29: C0321: More than one statement on a single line (multiple-statements)
config/skill_tree_nodes.py:305:0: C0116: Missing function or method docstring (missing-function-docstring)
config/skill_tree_nodes.py:305:33: C0321: More than one statement on a single line (multiple-statements)
config/skill_tree_nodes.py:307:0: C0116: Missing function or method docstring (missing-function-docstring)
config/skill_tree_nodes.py:307:29: C0321: More than one statement on a single line (multiple-statements)
config/skill_tree_nodes.py:309:0: C0116: Missing function or method docstring (missing-function-docstring)
config/skill_tree_nodes.py:309:32: C0321: More than one statement on a single line (multiple-statements)
config/skill_tree_nodes.py:311:0: C0116: Missing function or method docstring (missing-function-docstring)
config/skill_tree_nodes.py:311:41: C0321: More than one statement on a single line (multiple-statements)
config/skill_tree_nodes.py:313:0: C0116: Missing function or method docstring (missing-function-docstring)
config/skill_tree_nodes.py:313:39: C0321: More than one statement on a single line (multiple-statements)
config/skill_tree_nodes.py:315:0: C0116: Missing function or method docstring (missing-function-docstring)
config/skill_tree_nodes.py:315:27: C0321: More than one statement on a single line (multiple-statements)
config/skill_tree_nodes.py:317:0: C0116: Missing function or method docstring (missing-function-docstring)
config/skill_tree_nodes.py:317:34: C0321: More than one statement on a single line (multiple-statements)
config/skill_tree_nodes.py:319:0: C0116: Missing function or method docstring (missing-function-docstring)
config/skill_tree_nodes.py:319:30: C0321: More than one statement on a single line (multiple-statements)
config/skill_tree_nodes.py:321:0: C0116: Missing function or method docstring (missing-function-docstring)
config/skill_tree_nodes.py:321:32: C0321: More than one statement on a single line (multiple-statements)
config/skill_tree_nodes.py:323:0: C0116: Missing function or method docstring (missing-function-docstring)
config/skill_tree_nodes.py:323:31: C0321: More than one statement on a single line (multiple-statements)
config/skill_tree_nodes.py:325:0: C0116: Missing function or method docstring (missing-function-docstring)
config/skill_tree_nodes.py:325:31: C0321: More than one statement on a single line (multiple-statements)
config/skill_tree_nodes.py:327:0: C0116: Missing function or method docstring (missing-function-docstring)
config/skill_tree_nodes.py:327:28: C0321: More than one statement on a single line (multiple-statements)
config/skill_tree_nodes.py:329:0: C0116: Missing function or method docstring (missing-function-docstring)
config/skill_tree_nodes.py:329:27: C0321: More than one statement on a single line (multiple-statements)
config/skill_tree_nodes.py:331:0: C0116: Missing function or method docstring (missing-function-docstring)
config/skill_tree_nodes.py:331:32: C0321: More than one statement on a single line (multiple-statements)
config/skill_tree_nodes.py:333:0: C0116: Missing function or method docstring (missing-function-docstring)
config/skill_tree_nodes.py:333:30: C0321: More than one statement on a single line (multiple-statements)
config/skill_tree_nodes.py:335:0: C0116: Missing function or method docstring (missing-function-docstring)
config/skill_tree_nodes.py:335:29: C0321: More than one statement on a single line (multiple-statements)
config/skill_tree_nodes.py:337:0: C0116: Missing function or method docstring (missing-function-docstring)
config/skill_tree_nodes.py:337:33: C0321: More than one statement on a single line (multiple-statements)
config/skill_tree_nodes.py:339:0: C0116: Missing function or method docstring (missing-function-docstring)
config/skill_tree_nodes.py:339:30: C0321: More than one statement on a single line (multiple-statements)
config/skill_tree_nodes.py:341:0: C0116: Missing function or method docstring (missing-function-docstring)
config/skill_tree_nodes.py:341:32: C0321: More than one statement on a single line (multiple-statements)
config/skill_tree_nodes.py:345:0: C0116: Missing function or method docstring (missing-function-docstring)
config/skill_tree_nodes.py:345:32: C0321: More than one statement on a single line (multiple-statements)
config/skill_tree_nodes.py:347:0: C0116: Missing function or method docstring (missing-function-docstring)
config/skill_tree_nodes.py:347:31: C0321: More than one statement on a single line (multiple-statements)
config/skill_tree_nodes.py:349:0: C0116: Missing function or method docstring (missing-function-docstring)
config/skill_tree_nodes.py:349:26: C0321: More than one statement on a single line (multiple-statements)
config/skill_tree_nodes.py:351:0: C0116: Missing function or method docstring (missing-function-docstring)
config/skill_tree_nodes.py:351:28: C0321: More than one statement on a single line (multiple-statements)
config/skill_tree_nodes.py:353:0: C0116: Missing function or method docstring (missing-function-docstring)
config/skill_tree_nodes.py:353:37: C0321: More than one statement on a single line (multiple-statements)
config/skill_tree_nodes.py:355:0: C0116: Missing function or method docstring (missing-function-docstring)
config/skill_tree_nodes.py:355:35: C0321: More than one statement on a single line (multiple-statements)
config/skill_tree_nodes.py:357:0: C0116: Missing function or method docstring (missing-function-docstring)
config/skill_tree_nodes.py:357:38: C0321: More than one statement on a single line (multiple-statements)
config/skill_tree_nodes.py:359:0: C0116: Missing function or method docstring (missing-function-docstring)
config/skill_tree_nodes.py:359:39: C0321: More than one statement on a single line (multiple-statements)
config/skill_tree_nodes.py:361:0: C0116: Missing function or method docstring (missing-function-docstring)
config/skill_tree_nodes.py:361:37: C0321: More than one statement on a single line (multiple-statements)
config/skill_tree_nodes.py:363:0: C0116: Missing function or method docstring (missing-function-docstring)
config/skill_tree_nodes.py:363:38: C0321: More than one statement on a single line (multiple-statements)
config/skill_tree_nodes.py:365:0: C0116: Missing function or method docstring (missing-function-docstring)
config/skill_tree_nodes.py:365:39: C0321: More than one statement on a single line (multiple-statements)
config/skill_tree_nodes.py:367:0: C0116: Missing function or method docstring (missing-function-docstring)
config/skill_tree_nodes.py:367:35: C0321: More than one statement on a single line (multiple-statements)
config/skill_tree_nodes.py:369:0: C0116: Missing function or method docstring (missing-function-docstring)
config/skill_tree_nodes.py:369:36: C0321: More than one statement on a single line (multiple-statements)
config/skill_tree_nodes.py:371:0: C0116: Missing function or method docstring (missing-function-docstring)
config/skill_tree_nodes.py:371:34: C0321: More than one statement on a single line (multiple-statements)
config/skill_tree_nodes.py:373:0: C0116: Missing function or method docstring (missing-function-docstring)
config/skill_tree_nodes.py:373:35: C0321: More than one statement on a single line (multiple-statements)
config/skill_tree_nodes.py:375:0: C0116: Missing function or method docstring (missing-function-docstring)
config/skill_tree_nodes.py:375:37: C0321: More than one statement on a single line (multiple-statements)
config/skill_tree_nodes.py:377:0: C0116: Missing function or method docstring (missing-function-docstring)
config/skill_tree_nodes.py:377:38: C0321: More than one statement on a single line (multiple-statements)
config/skill_tree_nodes.py:379:0: C0116: Missing function or method docstring (missing-function-docstring)
config/skill_tree_nodes.py:379:38: C0321: More than one statement on a single line (multiple-statements)
config/skill_tree_nodes.py:381:0: C0116: Missing function or method docstring (missing-function-docstring)
config/skill_tree_nodes.py:381:32: C0321: More than one statement on a single line (multiple-statements)
config/skill_tree_nodes.py:383:0: C0116: Missing function or method docstring (missing-function-docstring)
config/skill_tree_nodes.py:383:39: C0321: More than one statement on a single line (multiple-statements)
************* Module backend.config.achievement_definitions
config/achievement_definitions.py:23:0: C0301: Line too long (121/120) (line-too-long)
config/achievement_definitions.py:32:0: C0301: Line too long (126/120) (line-too-long)
config/achievement_definitions.py:34:0: C0301: Line too long (123/120) (line-too-long)
config/achievement_definitions.py:37:0: C0301: Line too long (133/120) (line-too-long)
config/achievement_definitions.py:38:0: C0301: Line too long (135/120) (line-too-long)
config/achievement_definitions.py:45:0: C0301: Line too long (127/120) (line-too-long)
config/achievement_definitions.py:47:0: C0301: Line too long (126/120) (line-too-long)
config/achievement_definitions.py:49:0: C0301: Line too long (121/120) (line-too-long)
config/achievement_definitions.py:51:0: C0301: Line too long (122/120) (line-too-long)
config/achievement_definitions.py:53:0: C0301: Line too long (128/120) (line-too-long)
config/achievement_definitions.py:54:0: C0301: Line too long (132/120) (line-too-long)
config/achievement_definitions.py:55:0: C0301: Line too long (129/120) (line-too-long)
config/achievement_definitions.py:56:0: C0301: Line too long (142/120) (line-too-long)
config/achievement_definitions.py:57:0: C0301: Line too long (124/120) (line-too-long)
config/achievement_definitions.py:67:0: C0301: Line too long (143/120) (line-too-long)
config/achievement_definitions.py:68:0: C0301: Line too long (127/120) (line-too-long)
config/achievement_definitions.py:69:0: C0301: Line too long (130/120) (line-too-long)
config/achievement_definitions.py:70:0: C0301: Line too long (130/120) (line-too-long)
config/achievement_definitions.py:71:0: C0301: Line too long (125/120) (line-too-long)
config/achievement_definitions.py:72:0: C0301: Line too long (128/120) (line-too-long)
config/achievement_definitions.py:82:0: C0301: Line too long (123/120) (line-too-long)
config/achievement_definitions.py:85:0: C0301: Line too long (129/120) (line-too-long)
config/achievement_definitions.py:86:0: C0301: Line too long (122/120) (line-too-long)
config/achievement_definitions.py:87:0: C0301: Line too long (127/120) (line-too-long)
config/achievement_definitions.py:88:0: C0301: Line too long (129/120) (line-too-long)
config/achievement_definitions.py:89:0: C0301: Line too long (125/120) (line-too-long)
config/achievement_definitions.py:97:0: C0301: Line too long (124/120) (line-too-long)
config/achievement_definitions.py:99:0: C0301: Line too long (128/120) (line-too-long)
config/achievement_definitions.py:100:0: C0301: Line too long (139/120) (line-too-long)
config/achievement_definitions.py:101:0: C0301: Line too long (122/120) (line-too-long)
config/achievement_definitions.py:112:0: C0301: Line too long (122/120) (line-too-long)
config/achievement_definitions.py:113:0: C0301: Line too long (122/120) (line-too-long)
config/achievement_definitions.py:115:0: C0301: Line too long (121/120) (line-too-long)
config/achievement_definitions.py:118:0: C0301: Line too long (125/120) (line-too-long)
config/achievement_definitions.py:119:0: C0301: Line too long (121/120) (line-too-long)
config/achievement_definitions.py:127:0: C0301: Line too long (141/120) (line-too-long)
config/achievement_definitions.py:128:0: C0301: Line too long (133/120) (line-too-long)
config/achievement_definitions.py:129:0: C0301: Line too long (127/120) (line-too-long)
config/achievement_definitions.py:132:0: C0301: Line too long (129/120) (line-too-long)
config/achievement_definitions.py:135:0: C0301: Line too long (133/120) (line-too-long)
config/achievement_definitions.py:137:0: C0301: Line too long (125/120) (line-too-long)
config/achievement_definitions.py:141:0: C0301: Line too long (130/120) (line-too-long)
config/achievement_definitions.py:143:0: C0301: Line too long (125/120) (line-too-long)
config/achievement_definitions.py:148:0: C0301: Line too long (130/120) (line-too-long)
config/achievement_definitions.py:149:0: C0301: Line too long (124/120) (line-too-long)
config/achievement_definitions.py:151:0: C0301: Line too long (139/120) (line-too-long)
config/achievement_definitions.py:152:0: C0301: Line too long (135/120) (line-too-long)
config/achievement_definitions.py:6:0: C0115: Missing class docstring (missing-class-docstring)
************* Module backend.utils.trait_calculator
utils/trait_calculator.py:42:8: R1705: Unnecessary "elif" after "return", remove the leading "el" from "elif" (no-else-return)
utils/trait_calculator.py:73:8: R1705: Unnecessary "elif" after "return", remove the leading "el" from "elif" (no-else-return)
************* Module backend.utils.error_handlers
utils/error_handlers.py:19:12: W0707: Consider explicitly re-raising using 'raise HTTPException(status_code=status.HTTP_400_BAD_REQUEST, detail=str(e)) from e' (raise-missing-from)
utils/error_handlers.py:27:12: W0707: Consider explicitly re-raising using 'raise HTTPException(status_code=status.HTTP_500_INTERNAL_SERVER_ERROR, detail=str(e)) from e' (raise-missing-from)
utils/error_handlers.py:43:12: W0707: Consider explicitly re-raising using 'raise HTTPException(status_code=400, detail=str(e)) from e' (raise-missing-from)
utils/error_handlers.py:45:12: W0707: Consider explicitly re-raising using 'raise HTTPException(status_code=500, detail=f'Action failed: {str(e)}') from e' (raise-missing-from)
************* Module backend.utils.economy_helpers
utils/economy_helpers.py:1:0: C0114: Missing module docstring (missing-module-docstring)
************* Module backend.utils.helpers
utils/helpers.py:25:4: R1705: Unnecessary "elif" after "return", remove the leading "el" from "elif" (no-else-return)
utils/helpers.py:32:29: W0622: Redefining built-in 'credits' (redefined-builtin)
utils/helpers.py:34:4: R1705: Unnecessary "elif" after "return", remove the leading "el" from "elif" (no-else-return)
************* Module backend.utils.redis_helper
utils/redis_helper.py:20:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/redis_helper.py:39:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/redis_helper.py:50:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
************* Module backend.utils.progression_calculator
utils/progression_calculator.py:87:44: W0613: Unused argument 'nodes_unlocked' (unused-argument)
utils/progression_calculator.py:109:61: W0613: Unused argument 'total_achievements' (unused-argument)
utils/progression_calculator.py:174:4: W0622: Redefining built-in 'credits' (redefined-builtin)
************* Module backend.utils.quest_helpers
utils/quest_helpers.py:29:4: R1705: Unnecessary "elif" after "return", remove the leading "el" from "elif" (no-else-return)
utils/quest_helpers.py:20:4: W0613: Unused argument 'rewards' (unused-argument)
utils/quest_helpers.py:64:4: W0622: Redefining built-in 'credits' (redefined-builtin)
utils/quest_helpers.py:73:4: R1705: Unnecessary "elif" after "return", remove the leading "el" from "elif" (no-else-return)
utils/quest_helpers.py:88:4: R1705: Unnecessary "elif" after "return", remove the leading "el" from "elif" (no-else-return)
************* Module backend.core.config
core/config.py:1:0: C0114: Missing module docstring (missing-module-docstring)
core/config.py:4:0: C0115: Missing class docstring (missing-class-docstring)
core/config.py:32:4: C0115: Missing class docstring (missing-class-docstring)
core/config.py:2:0: C0411: standard import "os" should be placed before third party import "pydantic_settings.BaseSettings" (wrong-import-order)
************* Module backend.core.database
core/database.py:1:0: C0114: Missing module docstring (missing-module-docstring)
core/database.py:8:0: C0115: Missing class docstring (missing-class-docstring)
core/database.py:12:4: C0116: Missing function or method docstring (missing-function-docstring)
core/database.py:19:4: C0116: Missing function or method docstring (missing-function-docstring)
core/database.py:24:4: C0116: Missing function or method docstring (missing-function-docstring)
core/database.py:29:0: C0116: Missing function or method docstring (missing-function-docstring)
core/database.py:2:0: C0411: standard import "typing.Optional" should be placed before third party import "motor.motor_asyncio.AsyncIOMotorClient" (wrong-import-order)
core/database.py:4:0: C0411: standard import "logging" should be placed before third party import "motor.motor_asyncio.AsyncIOMotorClient" and local import "config.settings" (wrong-import-order)
************* Module backend.core.redis
core/redis.py:48:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
core/redis.py:52:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
************* Module backend.core.constants
core/constants.py:1:0: C0114: Missing module docstring (missing-module-docstring)
************* Module backend.core.security
core/security.py:1:0: C0114: Missing module docstring (missing-module-docstring)
************* Module backend.api.deps
api/deps.py:23:8: W0707: Consider explicitly re-raising using 'except Exception as exc' and 'raise HTTPException(status_code=status.HTTP_401_UNAUTHORIZED, detail='Invalid authentication credentials') from exc' (raise-missing-from)
************* Module backend.api.v1.leaderboards.schemas
api/v1/leaderboards/schemas.py:20:4: C0115: Missing class docstring (missing-class-docstring)
api/v1/leaderboards/schemas.py:32:4: C0115: Missing class docstring (missing-class-docstring)
api/v1/leaderboards/schemas.py:47:4: C0115: Missing class docstring (missing-class-docstring)
api/v1/leaderboards/schemas.py:4:0: C0411: standard import "typing.List" should be placed before third party import "pydantic.BaseModel" (wrong-import-order)
************* Module backend.api.v1.leaderboards.router
api/v1/leaderboards/router.py:5:0: E0611: No name 'get_current_player' in module 'backend.api.deps' (no-name-in-module)
api/v1/leaderboards/router.py:20:4: W0613: Unused argument 'current_player' (unused-argument)
api/v1/leaderboards/router.py:35:4: W0613: Unused argument 'current_player' (unused-argument)
api/v1/leaderboards/router.py:50:4: W0613: Unused argument 'current_player' (unused-argument)
api/v1/leaderboards/router.py:65:4: W0613: Unused argument 'current_player' (unused-argument)
api/v1/leaderboards/router.py:80:4: W0613: Unused argument 'current_player' (unused-argument)
api/v1/leaderboards/router.py:96:4: W0613: Unused argument 'current_player' (unused-argument)
api/v1/leaderboards/router.py:132:4: W0613: Unused argument 'current_player' (unused-argument)
api/v1/leaderboards/router.py:4:0: C0411: standard import "typing.Optional" should be placed before third party import "fastapi.APIRouter" (wrong-import-order)
************* Module backend.api.v1.health.router
api/v1/health/router.py:4:0: C0411: standard import "typing.Dict" should be placed before third party import "fastapi.APIRouter" (wrong-import-order)
api/v1/health/router.py:5:0: C0411: standard import "os" should be placed before third party import "fastapi.APIRouter" (wrong-import-order)
************* Module backend.api.v1.market.router
api/v1/market/router.py:6:0: E0611: No name 'get_current_user' in module 'backend.core.security' (no-name-in-module)
api/v1/market/router.py:4:0: C0411: standard import "typing.Dict" should be placed before third party import "fastapi.APIRouter" (wrong-import-order)
************* Module backend.api.v1.market.stocks.schemas
api/v1/market/stocks/schemas.py:4:0: C0411: standard import "datetime.datetime" should be placed before third party import "pydantic.BaseModel" (wrong-import-order)
************* Module backend.api.v1.market.stocks.router
api/v1/market/stocks/router.py:6:0: E0611: No name 'get_current_user' in module 'backend.core.security' (no-name-in-module)
api/v1/market/stocks/router.py:23:8: W0707: Consider explicitly re-raising using 'raise HTTPException(status_code=status.HTTP_500_INTERNAL_SERVER_ERROR, detail=str(e)) from e' (raise-missing-from)
api/v1/market/stocks/router.py:45:8: W0707: Consider explicitly re-raising using 'raise HTTPException(status_code=status.HTTP_500_INTERNAL_SERVER_ERROR, detail=str(e)) from e' (raise-missing-from)
api/v1/market/stocks/router.py:65:8: W0707: Consider explicitly re-raising using 'raise HTTPException(status_code=status.HTTP_400_BAD_REQUEST, detail=str(e)) from e' (raise-missing-from)
api/v1/market/stocks/router.py:70:8: W0707: Consider explicitly re-raising using 'raise HTTPException(status_code=status.HTTP_500_INTERNAL_SERVER_ERROR, detail=str(e)) from e' (raise-missing-from)
api/v1/market/stocks/router.py:90:8: W0707: Consider explicitly re-raising using 'raise HTTPException(status_code=status.HTTP_400_BAD_REQUEST, detail=str(e)) from e' (raise-missing-from)
api/v1/market/stocks/router.py:95:8: W0707: Consider explicitly re-raising using 'raise HTTPException(status_code=status.HTTP_500_INTERNAL_SERVER_ERROR, detail=str(e)) from e' (raise-missing-from)
api/v1/market/stocks/router.py:110:8: W0707: Consider explicitly re-raising using 'raise HTTPException(status_code=status.HTTP_500_INTERNAL_SERVER_ERROR, detail=str(e)) from e' (raise-missing-from)
api/v1/market/stocks/router.py:126:8: W0707: Consider explicitly re-raising using 'raise HTTPException(status_code=status.HTTP_500_INTERNAL_SERVER_ERROR, detail=str(e)) from e' (raise-missing-from)
api/v1/market/stocks/router.py:4:0: C0411: standard import "typing.Dict" should be placed before third party import "fastapi.APIRouter" (wrong-import-order)
************* Module backend.api.v1.market.real_estate.router
api/v1/market/real_estate/router.py:6:0: E0611: No name 'get_current_user' in module 'backend.core.security' (no-name-in-module)
api/v1/market/real_estate/router.py:36:4: W0613: Unused argument 'current_user' (unused-argument)
api/v1/market/real_estate/router.py:4:0: C0411: standard import "typing.Dict" should be placed before third party import "fastapi.APIRouter" (wrong-import-order)
************* Module backend.api.v1.market.items.router
api/v1/market/items/router.py:6:0: E0611: No name 'get_current_user' in module 'backend.core.security' (no-name-in-module)
api/v1/market/items/router.py:4:0: C0411: standard import "typing.Dict" should be placed before third party import "fastapi.APIRouter" (wrong-import-order)
************* Module backend.api.v1.achievements.schemas
api/v1/achievements/schemas.py:1:0: C0114: Missing module docstring (missing-module-docstring)
api/v1/achievements/schemas.py:6:0: C0115: Missing class docstring (missing-class-docstring)
api/v1/achievements/schemas.py:17:0: C0115: Missing class docstring (missing-class-docstring)
api/v1/achievements/schemas.py:21:0: C0115: Missing class docstring (missing-class-docstring)
api/v1/achievements/schemas.py:26:0: C0115: Missing class docstring (missing-class-docstring)
api/v1/achievements/schemas.py:2:0: C0411: standard import "typing.List" should be placed before third party import "pydantic.BaseModel" (wrong-import-order)
api/v1/achievements/schemas.py:4:0: C0411: standard import "datetime.datetime" should be placed before third party import "pydantic.BaseModel" and first party import "backend.models.achievements.AchievementCategory"  (wrong-import-order)
************* Module backend.api.v1.achievements.router
api/v1/achievements/router.py:1:0: C0114: Missing module docstring (missing-module-docstring)
api/v1/achievements/router.py:9:0: E0611: No name 'get_current_player' in module 'backend.api.deps' (no-name-in-module)
api/v1/achievements/router.py:14:0: C0115: Missing class docstring (missing-class-docstring)
api/v1/achievements/router.py:123:38: E1133: Non-iterable value achievements.unlocked_achievements is used in an iterating context (not-an-iterable)
api/v1/achievements/router.py:187:15: E1101: Instance of 'FieldInfo' has no 'get' member (no-member)
api/v1/achievements/router.py:204:17: E1136: Value 'achievements.recent_unlocks' is unsubscriptable (unsubscriptable-object)
api/v1/achievements/router.py:211:28: E1133: Non-iterable value achievements.unlocked_achievements is used in an iterating context (not-an-iterable)
api/v1/achievements/router.py:2:0: C0411: standard import "typing.Dict" should be placed before third party import "fastapi.APIRouter" (wrong-import-order)
api/v1/achievements/router.py:10:0: C0411: third party import "pydantic.BaseModel" should be placed before first party imports "backend.models.achievements.PlayerAchievements", "backend.services.achievements.achievement_service.AchievementService", "backend.api.deps.get_current_player"  (wrong-import-order)
************* Module backend.api.v1.quests.schemas
api/v1/quests/schemas.py:45:4: C0115: Missing class docstring (missing-class-docstring)
api/v1/quests/schemas.py:4:0: C0411: standard import "typing.Optional" should be placed before third party import "pydantic.BaseModel" (wrong-import-order)
api/v1/quests/schemas.py:5:0: C0411: standard import "datetime.datetime" should be placed before third party import "pydantic.BaseModel" (wrong-import-order)
************* Module backend.api.v1.quests.router
api/v1/quests/router.py:10:0: E0611: No name 'QuestType' in module 'backend.models.quests.quest' (no-name-in-module)
api/v1/quests/router.py:10:0: E0611: No name 'QuestStatus' in module 'backend.models.quests.quest' (no-name-in-module)
api/v1/quests/router.py:20:0: E0611: No name 'get_current_player' in module 'backend.api.deps' (no-name-in-module)
api/v1/quests/router.py:41:19: E1123: Unexpected keyword argument 'player_level' in method call (unexpected-keyword-arg)
api/v1/quests/router.py:41:19: E1123: Unexpected keyword argument 'player_karma' in method call (unexpected-keyword-arg)
api/v1/quests/router.py:41:19: E1123: Unexpected keyword argument 'player_traits' in method call (unexpected-keyword-arg)
api/v1/quests/router.py:41:19: E1123: Unexpected keyword argument 'player_items' in method call (unexpected-keyword-arg)
api/v1/quests/router.py:60:19: E1101: Instance of 'QuestManager' has no 'get_player_quests' member (no-member)
api/v1/quests/router.py:75:19: E1101: Instance of 'QuestManager' has no 'get_player_quests' member (no-member)
api/v1/quests/router.py:91:18: E1101: Instance of 'QuestManager' has no 'get_quest' member (no-member)
api/v1/quests/router.py:120:18: E1101: Instance of 'QuestManager' has no 'get_quest' member (no-member)
api/v1/quests/router.py:135:8: W0707: Consider explicitly re-raising using 'raise HTTPException(status_code=status.HTTP_400_BAD_REQUEST, detail=str(e)) from e' (raise-missing-from)
api/v1/quests/router.py:157:8: W0707: Consider explicitly re-raising using 'raise HTTPException(status_code=status.HTTP_400_BAD_REQUEST, detail=str(e)) from e' (raise-missing-from)
api/v1/quests/router.py:173:30: E1101: Instance of 'QuestManager' has no 'update_objective_progress' member (no-member)
api/v1/quests/router.py:181:8: W0707: Consider explicitly re-raising using 'raise HTTPException(status_code=status.HTTP_400_BAD_REQUEST, detail=str(e)) from e' (raise-missing-from)
api/v1/quests/router.py:197:23: E1101: Instance of 'QuestManager' has no 'complete_quest' member; maybe '_complete_quest'? (no-member)
api/v1/quests/router.py:203:8: W0707: Consider explicitly re-raising using 'raise HTTPException(status_code=status.HTTP_400_BAD_REQUEST, detail=str(e)) from e' (raise-missing-from)
api/v1/quests/router.py:219:25: E1101: Instance of 'QuestManager' has no 'get_player_quests' member (no-member)
api/v1/quests/router.py:254:26: E1101: Instance of 'QuestManager' has no 'get_player_quests' member (no-member)
api/v1/quests/router.py:289:8: W0707: Consider explicitly re-raising using 'raise HTTPException(status_code=status.HTTP_500_INTERNAL_SERVER_ERROR, detail=f'Failed to generate quest: {str(e)}') from e' (raise-missing-from)
api/v1/quests/router.py:4:0: C0411: standard import "typing.Optional" should be placed before third party import "fastapi.APIRouter" (wrong-import-order)
api/v1/quests/router.py:5:0: C0411: standard import "datetime.datetime" should be placed before third party import "fastapi.APIRouter" (wrong-import-order)
************* Module backend.api.v1.quests.campaigns
api/v1/quests/campaigns/__init__.py:1:0: C0114: Missing module docstring (missing-module-docstring)
************* Module backend.api.v1.quests.campaigns.schemas
api/v1/quests/campaigns/schemas.py:1:0: C0114: Missing module docstring (missing-module-docstring)
api/v1/quests/campaigns/schemas.py:5:0: C0115: Missing class docstring (missing-class-docstring)
api/v1/quests/campaigns/schemas.py:13:0: C0115: Missing class docstring (missing-class-docstring)
api/v1/quests/campaigns/schemas.py:22:0: C0115: Missing class docstring (missing-class-docstring)
api/v1/quests/campaigns/schemas.py:26:0: C0115: Missing class docstring (missing-class-docstring)
api/v1/quests/campaigns/schemas.py:30:0: C0115: Missing class docstring (missing-class-docstring)
api/v1/quests/campaigns/schemas.py:39:0: C0115: Missing class docstring (missing-class-docstring)
api/v1/quests/campaigns/schemas.py:2:0: C0411: standard import "typing.List" should be placed before third party import "pydantic.BaseModel" (wrong-import-order)
************* Module backend.api.v1.quests.campaigns.router
api/v1/quests/campaigns/router.py:1:0: C0114: Missing module docstring (missing-module-docstring)
api/v1/quests/campaigns/router.py:2:0: E0611: No name 'get_current_user' in module 'backend.core.security' (no-name-in-module)
************* Module backend.api.v1.quests.stats.schemas
api/v1/quests/stats/schemas.py:14:4: C0115: Missing class docstring (missing-class-docstring)
************* Module backend.api.v1.quests.stats.router
api/v1/quests/stats/router.py:7:0: E0611: No name 'get_current_player' in module 'backend.api.deps' (no-name-in-module)
************* Module backend.api.v1.quests.hidden.router
api/v1/quests/hidden/router.py:7:0: E0611: No name 'get_current_player' in module 'backend.api.deps' (no-name-in-module)
api/v1/quests/hidden/router.py:20:14: E1121: Too many positional arguments for constructor call (too-many-function-args)
api/v1/quests/hidden/router.py:22:19: E1101: Instance of 'HiddenQuestService' has no 'check_discovery' member (no-member)
api/v1/quests/hidden/router.py:38:14: E1121: Too many positional arguments for constructor call (too-many-function-args)
api/v1/quests/hidden/router.py:39:19: E1101: Instance of 'HiddenQuestService' has no 'get_player_hidden_quests' member (no-member)
************* Module backend.api.v1.quests.personal.router
api/v1/quests/personal/router.py:30:8: W0707: Consider explicitly re-raising using 'raise HTTPException(status_code=500, detail=str(e)) from e' (raise-missing-from)
api/v1/quests/personal/router.py:39:8: E0401: Unable to import 'services.ai.oracle.oracle' (import-error)
api/v1/quests/personal/router.py:58:8: W0707: Consider explicitly re-raising using 'raise HTTPException(status_code=500, detail=str(e)) from e' (raise-missing-from)
api/v1/quests/personal/router.py:4:0: C0411: standard import "typing.List" should be placed before third party import "fastapi.APIRouter" (wrong-import-order)
************* Module backend.api.v1.quests.weekly
api/v1/quests/weekly/__init__.py:1:0: C0114: Missing module docstring (missing-module-docstring)
************* Module backend.api.v1.quests.weekly.router
api/v1/quests/weekly/router.py:1:0: C0114: Missing module docstring (missing-module-docstring)
api/v1/quests/weekly/router.py:2:0: E0611: No name 'get_current_user' in module 'backend.core.security' (no-name-in-module)
************* Module backend.api.v1.quests.leaderboard.router
api/v1/quests/leaderboard/router.py:7:0: E0611: No name 'get_current_player' in module 'backend.api.deps' (no-name-in-module)
************* Module backend.api.v1.quests.daily
api/v1/quests/daily/__init__.py:1:0: C0114: Missing module docstring (missing-module-docstring)
************* Module backend.api.v1.quests.daily.router
api/v1/quests/daily/router.py:1:0: C0114: Missing module docstring (missing-module-docstring)
api/v1/quests/daily/router.py:2:0: E0611: No name 'get_current_user' in module 'backend.core.security' (no-name-in-module)
************* Module backend.api.v1.quests.guild.schemas
api/v1/quests/guild/schemas.py:1:0: C0114: Missing module docstring (missing-module-docstring)
api/v1/quests/guild/schemas.py:5:0: C0115: Missing class docstring (missing-class-docstring)
api/v1/quests/guild/schemas.py:2:0: C0411: standard import "typing.List" should be placed before third party import "pydantic.BaseModel" (wrong-import-order)
************* Module backend.api.v1.quests.guild.router
api/v1/quests/guild/router.py:7:0: E0611: No name 'get_current_player' in module 'backend.api.deps' (no-name-in-module)
api/v1/quests/guild/router.py:47:22: E1101: Instance of 'GuildQuestService' has no 'generate_guild_quest' member (no-member)
api/v1/quests/guild/router.py:52:8: W0707: Consider explicitly re-raising using 'raise HTTPException(status_code=status.HTTP_400_BAD_REQUEST, detail=str(e)) from e' (raise-missing-from)
api/v1/quests/guild/router.py:66:21: E1101: Instance of 'GuildQuestService' has no 'get_quest_progress' member (no-member)
api/v1/quests/guild/router.py:61:4: W0613: Unused argument 'current_player' (unused-argument)
************* Module backend.api.v1.quests.world.router
api/v1/quests/world/router.py:8:0: E0611: No name 'get_current_player' in module 'backend.api.deps' (no-name-in-module)
api/v1/quests/world/router.py:21:19: E1101: Instance of 'WorldQuestService' has no 'get_active_world_quests' member (no-member)
api/v1/quests/world/router.py:15:4: W0613: Unused argument 'current_player' (unused-argument)
api/v1/quests/world/router.py:39:24: E1101: Instance of 'WorldQuestService' has no 'get_quest_leaderboard' member (no-member)
api/v1/quests/world/router.py:33:4: W0613: Unused argument 'current_player' (unused-argument)
************* Module backend.api.v1.social
api/v1/social/__init__.py:1:0: C0114: Missing module docstring (missing-module-docstring)
************* Module backend.api.v1.social.marriage
api/v1/social/marriage.py:1:0: C0114: Missing module docstring (missing-module-docstring)
api/v1/social/marriage.py:11:0: C0115: Missing class docstring (missing-class-docstring)
api/v1/social/marriage.py:31:8: W0707: Consider explicitly re-raising using 'raise HTTPException(status_code=400, detail=str(e)) from e' (raise-missing-from)
api/v1/social/marriage.py:58:8: W0707: Consider explicitly re-raising using 'raise HTTPException(status_code=400, detail=str(e)) from e' (raise-missing-from)
api/v1/social/marriage.py:48:4: W0613: Unused argument 'current_user' (unused-argument)
api/v1/social/marriage.py:74:8: W0707: Consider explicitly re-raising using 'raise HTTPException(status_code=400, detail=str(e)) from e' (raise-missing-from)
api/v1/social/marriage.py:64:4: W0613: Unused argument 'current_user' (unused-argument)
api/v1/social/marriage.py:108:8: W0707: Consider explicitly re-raising using 'raise HTTPException(status_code=400, detail=str(e)) from e' (raise-missing-from)
api/v1/social/marriage.py:6:0: C0411: third party import "pydantic.BaseModel" should be placed before first party imports "backend.core.database.get_database", "backend.services.social.marriage.MarriageService", "backend.api.v1.auth.utils.get_current_user"  (wrong-import-order)
************* Module backend.api.v1.social.mentorship
api/v1/social/mentorship.py:1:0: C0114: Missing module docstring (missing-module-docstring)
api/v1/social/mentorship.py:11:0: C0115: Missing class docstring (missing-class-docstring)
api/v1/social/mentorship.py:31:8: W0707: Consider explicitly re-raising using 'raise HTTPException(status_code=400, detail=str(e)) from e' (raise-missing-from)
api/v1/social/mentorship.py:58:8: W0707: Consider explicitly re-raising using 'raise HTTPException(status_code=400, detail=str(e)) from e' (raise-missing-from)
api/v1/social/mentorship.py:48:4: W0613: Unused argument 'current_user' (unused-argument)
api/v1/social/mentorship.py:74:8: W0707: Consider explicitly re-raising using 'raise HTTPException(status_code=400, detail=str(e)) from e' (raise-missing-from)
api/v1/social/mentorship.py:64:4: W0613: Unused argument 'current_user' (unused-argument)
api/v1/social/mentorship.py:111:8: W0707: Consider explicitly re-raising using 'raise HTTPException(status_code=400, detail=str(e)) from e' (raise-missing-from)
api/v1/social/mentorship.py:130:8: W0707: Consider explicitly re-raising using 'raise HTTPException(status_code=400, detail=str(e)) from e' (raise-missing-from)
api/v1/social/mentorship.py:6:0: C0411: third party import "pydantic.BaseModel" should be placed before first party imports "backend.core.database.get_database", "backend.services.social.mentorship.MentorshipService", "backend.api.v1.auth.utils.get_current_user"  (wrong-import-order)
************* Module backend.api.v1.social.router
api/v1/social/router.py:1:0: C0114: Missing module docstring (missing-module-docstring)
api/v1/social/router.py:52:4: W0622: Redefining built-in 'type' (redefined-builtin)
api/v1/social/router.py:62:12: W0707: Consider explicitly re-raising using 'except ValueError as exc' and 'raise HTTPException(status_code=400, detail='Invalid relationship type') from exc' (raise-missing-from)
api/v1/social/router.py:7:0: C0411: standard import "typing.List" should be placed before third party imports "fastapi.APIRouter", "motor.motor_asyncio.AsyncIOMotorDatabase" and first party imports "backend.core.database.get_database", "backend.services.social.relationships.RelationshipService", "backend.api.v1.auth.utils.get_current_user", "backend.models.social.relationship.RelationshipType"  (wrong-import-order)
************* Module backend.api.v1.social.alliances
api/v1/social/alliances.py:1:0: C0114: Missing module docstring (missing-module-docstring)
api/v1/social/alliances.py:12:0: C0115: Missing class docstring (missing-class-docstring)
api/v1/social/alliances.py:16:0: C0115: Missing class docstring (missing-class-docstring)
api/v1/social/alliances.py:36:8: W0707: Consider explicitly re-raising using 'raise HTTPException(status_code=400, detail=str(e)) from e' (raise-missing-from)
api/v1/social/alliances.py:72:8: W0707: Consider explicitly re-raising using 'raise HTTPException(status_code=400, detail=str(e)) from e' (raise-missing-from)
api/v1/social/alliances.py:91:8: W0707: Consider explicitly re-raising using 'raise HTTPException(status_code=400, detail=str(e)) from e' (raise-missing-from)
api/v1/social/alliances.py:115:8: W0707: Consider explicitly re-raising using 'raise HTTPException(status_code=400, detail=str(e)) from e' (raise-missing-from)
api/v1/social/alliances.py:6:0: C0411: third party import "pydantic.BaseModel" should be placed before first party imports "backend.core.database.get_database", "backend.services.social.alliances.AllianceService", "backend.api.v1.auth.utils.get_current_user"  (wrong-import-order)
api/v1/social/alliances.py:7:0: C0411: standard import "typing.Optional" should be placed before third party imports "fastapi.APIRouter", "motor.motor_asyncio.AsyncIOMotorDatabase", "pydantic.BaseModel" and first party imports "backend.core.database.get_database", "backend.services.social.alliances.AllianceService", "backend.api.v1.auth.utils.get_current_user"  (wrong-import-order)
************* Module backend.api.v1.auth.schemas
api/v1/auth/schemas.py:1:0: C0114: Missing module docstring (missing-module-docstring)
api/v1/auth/schemas.py:3:0: C0115: Missing class docstring (missing-class-docstring)
api/v1/auth/schemas.py:7:0: C0115: Missing class docstring (missing-class-docstring)
api/v1/auth/schemas.py:14:0: C0115: Missing class docstring (missing-class-docstring)
************* Module backend.api.v1.auth.router
api/v1/auth/router.py:1:0: C0114: Missing module docstring (missing-module-docstring)
api/v1/auth/router.py:4:0: C0411: standard import "datetime.datetime" should be placed before third party imports "fastapi.APIRouter", "fastapi.security.HTTPBearer", "motor.motor_asyncio.AsyncIOMotorDatabase" (wrong-import-order)
api/v1/auth/router.py:7:0: C0411: first party import "backend.core.database.get_database" should be placed before local import "schemas.LoginRequest" (wrong-import-order)
api/v1/auth/router.py:8:0: C0411: first party import "backend.core.security.verify_password" should be placed before local import "schemas.LoginRequest" (wrong-import-order)
api/v1/auth/router.py:9:0: C0411: first party import "backend.models.player.player.Player" should be placed before local import "schemas.LoginRequest" (wrong-import-order)
************* Module backend.api.v1.seasonal.schemas
api/v1/seasonal/schemas.py:16:4: C0115: Missing class docstring (missing-class-docstring)
api/v1/seasonal/schemas.py:35:4: C0115: Missing class docstring (missing-class-docstring)
api/v1/seasonal/schemas.py:51:4: C0115: Missing class docstring (missing-class-docstring)
api/v1/seasonal/schemas.py:81:4: C0115: Missing class docstring (missing-class-docstring)
api/v1/seasonal/schemas.py:101:4: C0115: Missing class docstring (missing-class-docstring)
api/v1/seasonal/schemas.py:4:0: C0411: standard import "typing.List" should be placed before third party import "pydantic.BaseModel" (wrong-import-order)
api/v1/seasonal/schemas.py:5:0: C0411: standard import "datetime.datetime" should be placed before third party import "pydantic.BaseModel" (wrong-import-order)
************* Module backend.api.v1.seasonal.router
api/v1/seasonal/router.py:4:0: E0611: No name 'get_current_player' in module 'backend.api.deps' (no-name-in-module)
api/v1/seasonal/router.py:24:4: W0613: Unused argument 'current_player' (unused-argument)
api/v1/seasonal/router.py:73:8: W0707: Consider explicitly re-raising using 'raise HTTPException(status_code=400, detail=str(e)) from e' (raise-missing-from)
api/v1/seasonal/router.py:96:8: W0707: Consider explicitly re-raising using 'raise HTTPException(status_code=400, detail=str(e)) from e' (raise-missing-from)
api/v1/seasonal/router.py:102:4: W0613: Unused argument 'current_player' (unused-argument)
api/v1/seasonal/router.py:136:4: W0613: Unused argument 'current_player' (unused-argument)
************* Module backend.api.v1.robots.schemas
api/v1/robots/schemas.py:4:0: C0411: standard import "typing.Optional" should be placed before third party import "pydantic.BaseModel" (wrong-import-order)
api/v1/robots/schemas.py:5:0: C0411: standard import "datetime.datetime" should be placed before third party import "pydantic.BaseModel" (wrong-import-order)
************* Module backend.api.v1.robots.router
api/v1/robots/router.py:6:0: E0611: No name 'get_current_user' in module 'backend.core.security' (no-name-in-module)
api/v1/robots/router.py:36:8: W0707: Consider explicitly re-raising using 'raise HTTPException(status_code=status.HTTP_400_BAD_REQUEST, detail=str(e)) from e' (raise-missing-from)
api/v1/robots/router.py:41:8: W0707: Consider explicitly re-raising using 'raise HTTPException(status_code=status.HTTP_500_INTERNAL_SERVER_ERROR, detail=str(e)) from e' (raise-missing-from)
api/v1/robots/router.py:56:8: W0707: Consider explicitly re-raising using 'raise HTTPException(status_code=status.HTTP_500_INTERNAL_SERVER_ERROR, detail=str(e)) from e' (raise-missing-from)
api/v1/robots/router.py:88:8: W0707: Consider explicitly re-raising using 'raise HTTPException(status_code=status.HTTP_500_INTERNAL_SERVER_ERROR, detail=str(e)) from e' (raise-missing-from)
api/v1/robots/router.py:109:8: W0707: Consider explicitly re-raising using 'raise HTTPException(status_code=status.HTTP_400_BAD_REQUEST, detail=str(e)) from e' (raise-missing-from)
api/v1/robots/router.py:114:8: W0707: Consider explicitly re-raising using 'raise HTTPException(status_code=status.HTTP_500_INTERNAL_SERVER_ERROR, detail=str(e)) from e' (raise-missing-from)
api/v1/robots/router.py:133:8: W0707: Consider explicitly re-raising using 'raise HTTPException(status_code=status.HTTP_400_BAD_REQUEST, detail=str(e)) from e' (raise-missing-from)
api/v1/robots/router.py:138:8: W0707: Consider explicitly re-raising using 'raise HTTPException(status_code=status.HTTP_500_INTERNAL_SERVER_ERROR, detail=str(e)) from e' (raise-missing-from)
api/v1/robots/router.py:4:0: C0411: standard import "typing.Dict" should be placed before third party import "fastapi.APIRouter" (wrong-import-order)
************* Module backend.api.v1.robots.marketplace.router
api/v1/robots/marketplace/router.py:6:0: E0611: No name 'get_current_user' in module 'backend.core.security' (no-name-in-module)
api/v1/robots/marketplace/router.py:24:8: W0707: Consider explicitly re-raising using 'raise HTTPException(status_code=status.HTTP_500_INTERNAL_SERVER_ERROR, detail=str(e)) from e' (raise-missing-from)
api/v1/robots/marketplace/router.py:44:8: W0707: Consider explicitly re-raising using 'raise HTTPException(status_code=status.HTTP_400_BAD_REQUEST, detail=str(e)) from e' (raise-missing-from)
api/v1/robots/marketplace/router.py:49:8: W0707: Consider explicitly re-raising using 'raise HTTPException(status_code=status.HTTP_500_INTERNAL_SERVER_ERROR, detail=str(e)) from e' (raise-missing-from)
api/v1/robots/marketplace/router.py:68:8: W0707: Consider explicitly re-raising using 'raise HTTPException(status_code=status.HTTP_400_BAD_REQUEST, detail=str(e)) from e' (raise-missing-from)
api/v1/robots/marketplace/router.py:73:8: W0707: Consider explicitly re-raising using 'raise HTTPException(status_code=status.HTTP_500_INTERNAL_SERVER_ERROR, detail=str(e)) from e' (raise-missing-from)
api/v1/robots/marketplace/router.py:92:8: W0707: Consider explicitly re-raising using 'raise HTTPException(status_code=status.HTTP_400_BAD_REQUEST, detail=str(e)) from e' (raise-missing-from)
api/v1/robots/marketplace/router.py:97:8: W0707: Consider explicitly re-raising using 'raise HTTPException(status_code=status.HTTP_500_INTERNAL_SERVER_ERROR, detail=str(e)) from e' (raise-missing-from)
api/v1/robots/marketplace/router.py:112:8: W0707: Consider explicitly re-raising using 'raise HTTPException(status_code=status.HTTP_500_INTERNAL_SERVER_ERROR, detail=str(e)) from e' (raise-missing-from)
api/v1/robots/marketplace/router.py:4:0: C0411: standard import "typing.Dict" should be placed before third party import "fastapi.APIRouter" (wrong-import-order)
************* Module backend.api.v1.robots.training.schemas
api/v1/robots/training/schemas.py:4:0: C0411: standard import "typing.Optional" should be placed before third party import "pydantic.BaseModel" (wrong-import-order)
api/v1/robots/training/schemas.py:5:0: C0411: standard import "datetime.datetime" should be placed before third party import "pydantic.BaseModel" (wrong-import-order)
************* Module backend.api.v1.robots.training.router
api/v1/robots/training/router.py:6:0: E0611: No name 'get_current_user' in module 'backend.core.security' (no-name-in-module)
api/v1/robots/training/router.py:29:8: W0707: Consider explicitly re-raising using 'raise HTTPException(status_code=status.HTTP_400_BAD_REQUEST, detail=str(e)) from e' (raise-missing-from)
api/v1/robots/training/router.py:34:8: W0707: Consider explicitly re-raising using 'raise HTTPException(status_code=status.HTTP_500_INTERNAL_SERVER_ERROR, detail=str(e)) from e' (raise-missing-from)
api/v1/robots/training/router.py:47:8: W0621: Redefining name 'status' from outer scope (line 3) (redefined-outer-name)
api/v1/robots/training/router.py:50:8: W0707: Consider explicitly re-raising using 'raise HTTPException(status_code=status.HTTP_500_INTERNAL_SERVER_ERROR, detail=str(e)) from e' (raise-missing-from)
api/v1/robots/training/router.py:43:4: W0613: Unused argument 'current_user' (unused-argument)
api/v1/robots/training/router.py:69:8: W0707: Consider explicitly re-raising using 'raise HTTPException(status_code=status.HTTP_400_BAD_REQUEST, detail=str(e)) from e' (raise-missing-from)
api/v1/robots/training/router.py:74:8: W0707: Consider explicitly re-raising using 'raise HTTPException(status_code=status.HTTP_500_INTERNAL_SERVER_ERROR, detail=str(e)) from e' (raise-missing-from)
api/v1/robots/training/router.py:4:0: C0411: standard import "typing.Dict" should be placed before third party import "fastapi.APIRouter" (wrong-import-order)
************* Module backend.api.v1.player
api/v1/player/__init__.py:1:0: C0114: Missing module docstring (missing-module-docstring)
************* Module backend.api.v1.player.schemas
api/v1/player/schemas.py:50:0: C0304: Final newline missing (missing-final-newline)
api/v1/player/schemas.py:1:0: C0114: Missing module docstring (missing-module-docstring)
api/v1/player/schemas.py:2:0: C0411: standard import "typing.Optional" should be placed before third party import "pydantic.BaseModel" (wrong-import-order)
api/v1/player/schemas.py:3:0: C0411: standard import "datetime.datetime" should be placed before third party import "pydantic.BaseModel" (wrong-import-order)
************* Module backend.api.v1.player.router
api/v1/player/router.py:82:0: C0304: Final newline missing (missing-final-newline)
api/v1/player/router.py:1:0: C0114: Missing module docstring (missing-module-docstring)
api/v1/player/router.py:18:22: E1121: Too many positional arguments for constructor call (too-many-function-args)
api/v1/player/router.py:28:22: E1121: Too many positional arguments for constructor call (too-many-function-args)
api/v1/player/router.py:51:22: E1121: Too many positional arguments for constructor call (too-many-function-args)
api/v1/player/router.py:5:0: C0411: first party import "backend.core.database.get_database" should be placed before local import "schemas.PlayerUpdateRequest" (wrong-import-order)
api/v1/player/router.py:6:0: C0411: first party import "backend.api.v1.auth.router.get_current_user_dep" should be placed before local import "schemas.PlayerUpdateRequest" (wrong-import-order)
api/v1/player/router.py:7:0: C0411: first party import "backend.models.player.player.Player" should be placed before local import "schemas.PlayerUpdateRequest" (wrong-import-order)
api/v1/player/router.py:8:0: C0411: first party import "backend.services.player.profile.PlayerProfileService" should be placed before local import "schemas.PlayerUpdateRequest" (wrong-import-order)
************* Module backend.api.v1.player.stats.schemas
api/v1/player/stats/schemas.py:22:4: C0115: Missing class docstring (missing-class-docstring)
api/v1/player/stats/schemas.py:68:4: C0115: Missing class docstring (missing-class-docstring)
api/v1/player/stats/schemas.py:4:0: C0411: standard import "typing.List" should be placed before third party import "pydantic.BaseModel" (wrong-import-order)
************* Module backend.api.v1.player.stats.router
api/v1/player/stats/router.py:4:0: C0411: standard import "typing.Dict" should be placed before third party import "fastapi.APIRouter" (wrong-import-order)
************* Module backend.api.v1.player.traits.__init__
api/v1/player/traits/__init__.py:1:0: C0304: Final newline missing (missing-final-newline)
************* Module backend.api.v1.player.traits.schemas
api/v1/player/traits/schemas.py:28:0: C0304: Final newline missing (missing-final-newline)
api/v1/player/traits/schemas.py:1:0: C0114: Missing module docstring (missing-module-docstring)
api/v1/player/traits/schemas.py:2:0: C0411: standard import "typing.Dict" should be placed before third party import "pydantic.BaseModel" (wrong-import-order)
************* Module backend.api.v1.player.traits.router
api/v1/player/traits/router.py:75:0: C0304: Final newline missing (missing-final-newline)
api/v1/player/traits/router.py:1:0: C0114: Missing module docstring (missing-module-docstring)
api/v1/player/traits/router.py:3:0: C0411: standard import "typing.Dict" should be placed before third party imports "fastapi.APIRouter", "motor.motor_asyncio.AsyncIOMotorDatabase" (wrong-import-order)
api/v1/player/traits/router.py:6:0: C0411: first party import "backend.core.database.get_database" should be placed before local import "schemas.TraitAllocateRequest" (wrong-import-order)
api/v1/player/traits/router.py:7:0: C0411: first party import "backend.api.v1.auth.router.get_current_user_dep" should be placed before local import "schemas.TraitAllocateRequest" (wrong-import-order)
api/v1/player/traits/router.py:8:0: C0411: first party import "backend.models.player.player.Player" should be placed before local import "schemas.TraitAllocateRequest" (wrong-import-order)
api/v1/player/traits/router.py:9:0: C0411: first party import "backend.services.player.traits.TraitsService" should be placed before local import "schemas.TraitAllocateRequest" (wrong-import-order)
************* Module backend.api.v1.player.inventory.schemas
api/v1/player/inventory/schemas.py:15:4: C0115: Missing class docstring (missing-class-docstring)
api/v1/player/inventory/schemas.py:33:4: C0115: Missing class docstring (missing-class-docstring)
api/v1/player/inventory/schemas.py:47:4: C0115: Missing class docstring (missing-class-docstring)
api/v1/player/inventory/schemas.py:4:0: C0411: standard import "typing.Optional" should be placed before third party import "pydantic.BaseModel" (wrong-import-order)
************* Module backend.api.v1.player.inventory.router
api/v1/player/inventory/router.py:177:4: W0612: Unused variable 'removed' (unused-variable)
api/v1/player/inventory/router.py:4:0: C0411: standard import "typing.Dict" should be placed before third party import "fastapi.APIRouter" (wrong-import-order)
api/v1/player/inventory/router.py:10:0: W0611: Unused PlayerInventory imported from backend.models.player.inventory (unused-import)
************* Module backend.api.v1.player.superpowers.schemas
api/v1/player/superpowers/schemas.py:1:0: C0114: Missing module docstring (missing-module-docstring)
api/v1/player/superpowers/schemas.py:5:0: C0115: Missing class docstring (missing-class-docstring)
api/v1/player/superpowers/schemas.py:16:0: C0115: Missing class docstring (missing-class-docstring)
api/v1/player/superpowers/schemas.py:19:0: C0115: Missing class docstring (missing-class-docstring)
api/v1/player/superpowers/schemas.py:22:0: C0115: Missing class docstring (missing-class-docstring)
api/v1/player/superpowers/schemas.py:27:0: C0115: Missing class docstring (missing-class-docstring)
api/v1/player/superpowers/schemas.py:2:0: C0411: standard import "typing.Dict" should be placed before third party import "pydantic.BaseModel" (wrong-import-order)
************* Module backend.api.v1.player.superpowers.router
api/v1/player/superpowers/router.py:1:0: C0114: Missing module docstring (missing-module-docstring)
api/v1/player/superpowers/router.py:5:0: E0611: No name 'get_current_player' in module 'backend.api.deps' (no-name-in-module)
api/v1/player/superpowers/router.py:10:0: C0115: Missing class docstring (missing-class-docstring)
api/v1/player/superpowers/router.py:13:0: C0115: Missing class docstring (missing-class-docstring)
api/v1/player/superpowers/router.py:16:0: C0115: Missing class docstring (missing-class-docstring)
api/v1/player/superpowers/router.py:134:19: E1135: Value 'superpowers.equipped_powers' doesn't support membership test (unsupported-membership-test)
api/v1/player/superpowers/router.py:135:8: E1101: Instance of 'FieldInfo' has no 'remove' member (no-member)
api/v1/player/superpowers/router.py:2:0: C0411: standard import "typing.Dict" should be placed before third party import "fastapi.APIRouter" (wrong-import-order)
api/v1/player/superpowers/router.py:6:0: C0411: third party import "pydantic.BaseModel" should be placed before first party imports "backend.models.player.superpowers.PlayerSuperpowers", "backend.services.player.superpowers.SuperpowerService", "backend.api.deps.get_current_player"  (wrong-import-order)
************* Module backend.api.v1.player.profile.schemas
api/v1/player/profile/schemas.py:28:4: C0115: Missing class docstring (missing-class-docstring)
api/v1/player/profile/schemas.py:69:4: C0115: Missing class docstring (missing-class-docstring)
api/v1/player/profile/schemas.py:91:4: C0115: Missing class docstring (missing-class-docstring)
api/v1/player/profile/schemas.py:125:4: C0115: Missing class docstring (missing-class-docstring)
api/v1/player/profile/schemas.py:4:0: C0411: standard import "typing.Dict" should be placed before third party import "pydantic.BaseModel" (wrong-import-order)
api/v1/player/profile/schemas.py:5:0: C0411: standard import "datetime.datetime" should be placed before third party import "pydantic.BaseModel" (wrong-import-order)
************* Module backend.api.v1.player.profile.router
api/v1/player/profile/router.py:4:0: C0411: standard import "typing.Dict" should be placed before third party import "fastapi.APIRouter" (wrong-import-order)
api/v1/player/profile/router.py:15:0: C0411: third party import "bson.ObjectId" should be placed before first party imports "backend.core.database.get_database", "backend.api.deps.get_current_user", "backend.api.v1.player.profile.schemas.PlayerProfileResponse", "backend.services.player.stats_calculator.StatsCalculator"  (wrong-import-order)
************* Module backend.api.v1.player.progression.schemas
api/v1/player/progression/schemas.py:6:0: C0115: Missing class docstring (missing-class-docstring)
api/v1/player/progression/schemas.py:9:0: C0115: Missing class docstring (missing-class-docstring)
api/v1/player/progression/schemas.py:16:0: C0115: Missing class docstring (missing-class-docstring)
api/v1/player/progression/schemas.py:27:0: C0115: Missing class docstring (missing-class-docstring)
api/v1/player/progression/schemas.py:4:0: C0411: standard import "typing.Dict" should be placed before third party import "pydantic.BaseModel" (wrong-import-order)
************* Module backend.api.v1.player.progression.router
api/v1/player/progression/router.py:5:0: E0611: No name 'get_current_user' in module 'backend.core.security' (no-name-in-module)
api/v1/player/progression/router.py:50:8: W0707: Consider explicitly re-raising using 'raise HTTPException(status_code=500, detail=str(e)) from e' (raise-missing-from)
api/v1/player/progression/router.py:80:8: W0707: Consider explicitly re-raising using 'raise HTTPException(status_code=500, detail=str(e)) from e' (raise-missing-from)
api/v1/player/progression/router.py:96:37: E1101: Instance of 'ProgressionService' has no 'calculate_completion_percentage' member (no-member)
api/v1/player/progression/router.py:99:8: W0707: Consider explicitly re-raising using 'raise HTTPException(status_code=500, detail=str(e)) from e' (raise-missing-from)
api/v1/player/progression/router.py:4:0: C0411: standard import "typing.Dict" should be placed before third party import "fastapi.APIRouter" (wrong-import-order)
************* Module backend.api.v1.player.skill_trees.schemas
api/v1/player/skill_trees/schemas.py:1:0: C0114: Missing module docstring (missing-module-docstring)
api/v1/player/skill_trees/schemas.py:4:0: C0115: Missing class docstring (missing-class-docstring)
api/v1/player/skill_trees/schemas.py:9:0: C0115: Missing class docstring (missing-class-docstring)
api/v1/player/skill_trees/schemas.py:16:0: C0115: Missing class docstring (missing-class-docstring)
api/v1/player/skill_trees/schemas.py:21:0: C0115: Missing class docstring (missing-class-docstring)
api/v1/player/skill_trees/schemas.py:26:0: C0115: Missing class docstring (missing-class-docstring)
api/v1/player/skill_trees/schemas.py:2:0: C0411: standard import "typing.List" should be placed before third party import "pydantic.BaseModel" (wrong-import-order)
************* Module backend.api.v1.player.skill_trees.router
api/v1/player/skill_trees/router.py:1:0: C0114: Missing module docstring (missing-module-docstring)
api/v1/player/skill_trees/router.py:5:0: E0611: No name 'get_current_player' in module 'backend.api.deps' (no-name-in-module)
api/v1/player/skill_trees/router.py:10:0: C0115: Missing class docstring (missing-class-docstring)
api/v1/player/skill_trees/router.py:14:0: C0115: Missing class docstring (missing-class-docstring)
api/v1/player/skill_trees/router.py:58:25: E1135: Value 'skill_trees.skill_trees' doesn't support membership test (unsupported-membership-test)
api/v1/player/skill_trees/router.py:62:11: E1136: Value 'skill_trees.skill_trees' is unsubscriptable (unsubscriptable-object)
api/v1/player/skill_trees/router.py:92:22: E1136: Value 'skill_trees.skill_trees' is unsubscriptable (unsubscriptable-object)
api/v1/player/skill_trees/router.py:121:22: E1136: Value 'skill_trees.skill_trees' is unsubscriptable (unsubscriptable-object)
api/v1/player/skill_trees/router.py:2:0: C0411: standard import "typing.Dict" should be placed before third party import "fastapi.APIRouter" (wrong-import-order)
api/v1/player/skill_trees/router.py:6:0: C0411: third party import "pydantic.BaseModel" should be placed before first party imports "backend.models.player.skill_trees.PlayerSkillTrees", "backend.services.player.skill_trees.SkillTreeService", "backend.api.deps.get_current_player"  (wrong-import-order)
************* Module backend.api.v1.player.prestige.schemas
api/v1/player/prestige/schemas.py:1:0: C0114: Missing module docstring (missing-module-docstring)
api/v1/player/prestige/schemas.py:4:0: C0115: Missing class docstring (missing-class-docstring)
api/v1/player/prestige/schemas.py:11:0: C0115: Missing class docstring (missing-class-docstring)
api/v1/player/prestige/schemas.py:19:0: C0115: Missing class docstring (missing-class-docstring)
api/v1/player/prestige/schemas.py:26:0: C0115: Missing class docstring (missing-class-docstring)
api/v1/player/prestige/schemas.py:2:0: C0411: standard import "typing.List" should be placed before third party import "pydantic.BaseModel" (wrong-import-order)
************* Module backend.api.v1.player.prestige.router
api/v1/player/prestige/router.py:1:0: C0114: Missing module docstring (missing-module-docstring)
api/v1/player/prestige/router.py:5:0: E0611: No name 'get_current_player' in module 'backend.api.deps' (no-name-in-module)
api/v1/player/prestige/router.py:2:0: C0411: standard import "typing.Dict" should be placed before third party import "fastapi.APIRouter" (wrong-import-order)
************* Module backend.api.v1.player.privacy.schemas
api/v1/player/privacy/schemas.py:1:0: C0114: Missing module docstring (missing-module-docstring)
api/v1/player/privacy/schemas.py:4:0: C0115: Missing class docstring (missing-class-docstring)
api/v1/player/privacy/schemas.py:14:0: C0115: Missing class docstring (missing-class-docstring)
api/v1/player/privacy/schemas.py:17:0: C0115: Missing class docstring (missing-class-docstring)
api/v1/player/privacy/schemas.py:2:0: C0411: standard import "typing.Optional" should be placed before third party import "pydantic.BaseModel" (wrong-import-order)
************* Module backend.api.v1.player.privacy.router
api/v1/player/privacy/router.py:1:0: C0114: Missing module docstring (missing-module-docstring)
api/v1/player/privacy/router.py:12:17: E1101: Instance of 'VisibilityService' has no 'get_privacy_settings' member (no-member)
api/v1/player/privacy/router.py:22:23: E1101: Instance of 'VisibilityService' has no 'update_privacy_settings' member (no-member)
api/v1/player/privacy/router.py:28:8: W0707: Consider explicitly re-raising using 'raise HTTPException(status_code=400, detail=str(e)) from e' (raise-missing-from)
api/v1/player/privacy/router.py:38:23: E1101: Instance of 'VisibilityService' has no 'change_privacy_tier' member (no-member)
api/v1/player/privacy/router.py:44:8: W0707: Consider explicitly re-raising using 'raise HTTPException(status_code=400, detail=str(e)) from e' (raise-missing-from)
************* Module backend.api.v1.player.legacy.schemas
api/v1/player/legacy/schemas.py:1:0: C0114: Missing module docstring (missing-module-docstring)
api/v1/player/legacy/schemas.py:5:0: C0115: Missing class docstring (missing-class-docstring)
api/v1/player/legacy/schemas.py:15:0: C0115: Missing class docstring (missing-class-docstring)
api/v1/player/legacy/schemas.py:24:0: C0115: Missing class docstring (missing-class-docstring)
api/v1/player/legacy/schemas.py:27:0: C0115: Missing class docstring (missing-class-docstring)
api/v1/player/legacy/schemas.py:30:0: C0115: Missing class docstring (missing-class-docstring)
api/v1/player/legacy/schemas.py:35:0: C0115: Missing class docstring (missing-class-docstring)
api/v1/player/legacy/schemas.py:43:0: C0115: Missing class docstring (missing-class-docstring)
api/v1/player/legacy/schemas.py:51:0: C0115: Missing class docstring (missing-class-docstring)
api/v1/player/legacy/schemas.py:2:0: C0411: standard import "typing.Optional" should be placed before third party import "pydantic.BaseModel" (wrong-import-order)
api/v1/player/legacy/schemas.py:3:0: C0411: standard import "datetime.datetime" should be placed before third party import "pydantic.BaseModel" (wrong-import-order)
************* Module backend.api.v1.player.legacy.router
api/v1/player/legacy/router.py:1:0: C0114: Missing module docstring (missing-module-docstring)
api/v1/player/legacy/router.py:5:0: E0611: No name 'get_current_player' in module 'backend.api.deps' (no-name-in-module)
api/v1/player/legacy/router.py:10:0: C0115: Missing class docstring (missing-class-docstring)
api/v1/player/legacy/router.py:13:0: C0115: Missing class docstring (missing-class-docstring)
api/v1/player/legacy/router.py:16:0: C0115: Missing class docstring (missing-class-docstring)
api/v1/player/legacy/router.py:59:49: E1133: Non-iterable value legacy.unlocked_perks is used in an iterating context (not-an-iterable)
api/v1/player/legacy/router.py:133:18: E1135: Value 'legacy.active_perks' doesn't support membership test (unsupported-membership-test)
api/v1/player/legacy/router.py:134:8: E1101: Instance of 'FieldInfo' has no 'remove' member (no-member)
api/v1/player/legacy/router.py:156:4: W0612: Unused variable 'success' (unused-variable)
api/v1/player/legacy/router.py:179:41: E1133: Non-iterable value legacy.earned_titles is used in an iterating context (not-an-iterable)
api/v1/player/legacy/router.py:195:47: E1133: Non-iterable value legacy.earned_titles is used in an iterating context (not-an-iterable)
api/v1/player/legacy/router.py:215:44: E1133: Non-iterable value legacy.heirloom_items is used in an iterating context (not-an-iterable)
api/v1/player/legacy/router.py:2:0: C0411: standard import "typing.Dict" should be placed before third party import "fastapi.APIRouter" (wrong-import-order)
api/v1/player/legacy/router.py:6:0: C0411: third party import "pydantic.BaseModel" should be placed before first party imports "backend.models.player.legacy.PlayerLegacy", "backend.services.player.legacy.LegacyService", "backend.api.deps.get_current_player"  (wrong-import-order)
************* Module backend.api.v1.real_estate
api/v1/real_estate/__init__.py:1:0: C0114: Missing module docstring (missing-module-docstring)
************* Module backend.api.v1.real_estate.schemas
api/v1/real_estate/schemas.py:1:0: C0114: Missing module docstring (missing-module-docstring)
api/v1/real_estate/schemas.py:6:0: C0115: Missing class docstring (missing-class-docstring)
api/v1/real_estate/schemas.py:16:0: C0115: Missing class docstring (missing-class-docstring)
api/v1/real_estate/schemas.py:22:0: C0115: Missing class docstring (missing-class-docstring)
api/v1/real_estate/schemas.py:33:0: C0115: Missing class docstring (missing-class-docstring)
api/v1/real_estate/schemas.py:38:0: C0115: Missing class docstring (missing-class-docstring)
api/v1/real_estate/schemas.py:42:0: C0115: Missing class docstring (missing-class-docstring)
api/v1/real_estate/schemas.py:51:0: C0115: Missing class docstring (missing-class-docstring)
api/v1/real_estate/schemas.py:56:0: C0115: Missing class docstring (missing-class-docstring)
api/v1/real_estate/schemas.py:2:0: C0411: standard import "typing.List" should be placed before third party import "pydantic.BaseModel" (wrong-import-order)
api/v1/real_estate/schemas.py:3:0: C0411: standard import "datetime.datetime" should be placed before third party import "pydantic.BaseModel" (wrong-import-order)
************* Module backend.api.v1.real_estate.router
api/v1/real_estate/router.py:1:0: C0114: Missing module docstring (missing-module-docstring)
api/v1/real_estate/router.py:2:0: E0611: No name 'get_current_user' in module 'backend.core.security' (no-name-in-module)
api/v1/real_estate/router.py:21:4: W0613: Unused argument 'current_user' (unused-argument)
api/v1/real_estate/router.py:46:4: W0613: Unused argument 'current_user' (unused-argument)
************* Module backend.api.v1.tutorial.router
api/v1/tutorial/router.py:8:0: E0611: No name 'get_current_player' in module 'backend.api.deps' (no-name-in-module)
api/v1/tutorial/router.py:13:0: C0115: Missing class docstring (missing-class-docstring)
api/v1/tutorial/router.py:17:0: C0115: Missing class docstring (missing-class-docstring)
api/v1/tutorial/router.py:75:8: W0707: Consider explicitly re-raising using 'raise HTTPException(status_code=400, detail=str(e)) from e' (raise-missing-from)
api/v1/tutorial/router.py:91:8: W0707: Consider explicitly re-raising using 'raise HTTPException(status_code=400, detail=str(e)) from e' (raise-missing-from)
api/v1/tutorial/router.py:4:0: C0411: standard import "typing.Dict" should be placed before third party import "fastapi.APIRouter" (wrong-import-order)
************* Module backend.api.v1.tournaments.schemas
api/v1/tournaments/schemas.py:19:4: C0115: Missing class docstring (missing-class-docstring)
api/v1/tournaments/schemas.py:45:4: C0115: Missing class docstring (missing-class-docstring)
api/v1/tournaments/schemas.py:4:0: C0411: standard import "typing.List" should be placed before third party import "pydantic.BaseModel" (wrong-import-order)
api/v1/tournaments/schemas.py:5:0: C0411: standard import "datetime.datetime" should be placed before third party import "pydantic.BaseModel" (wrong-import-order)
************* Module backend.api.v1.tournaments.router
api/v1/tournaments/router.py:5:0: E0611: No name 'get_current_player' in module 'backend.api.deps' (no-name-in-module)
api/v1/tournaments/router.py:18:4: W0613: Unused argument 'current_player' (unused-argument)
api/v1/tournaments/router.py:29:4: W0613: Unused argument 'current_player' (unused-argument)
api/v1/tournaments/router.py:56:8: W0707: Consider explicitly re-raising using 'raise HTTPException(status_code=400, detail=str(e)) from e' (raise-missing-from)
api/v1/tournaments/router.py:62:4: W0613: Unused argument 'current_player' (unused-argument)
api/v1/tournaments/router.py:4:0: C0411: standard import "typing.List" should be placed before third party import "fastapi.APIRouter" (wrong-import-order)
************* Module backend.api.v1.guilds
api/v1/guilds/__init__.py:1:0: C0114: Missing module docstring (missing-module-docstring)
************* Module backend.api.v1.guilds.wars
api/v1/guilds/wars.py:1:0: C0114: Missing module docstring (missing-module-docstring)
api/v1/guilds/wars.py:12:0: C0115: Missing class docstring (missing-class-docstring)
api/v1/guilds/wars.py:17:0: C0115: Missing class docstring (missing-class-docstring)
api/v1/guilds/wars.py:49:8: W0707: Consider explicitly re-raising using 'raise HTTPException(status_code=400, detail=str(e)) from e' (raise-missing-from)
api/v1/guilds/wars.py:104:8: W0707: Consider explicitly re-raising using 'raise HTTPException(status_code=400, detail=str(e)) from e' (raise-missing-from)
api/v1/guilds/wars.py:129:8: W0707: Consider explicitly re-raising using 'raise HTTPException(status_code=400, detail=str(e)) from e' (raise-missing-from)
api/v1/guilds/wars.py:154:8: W0707: Consider explicitly re-raising using 'raise HTTPException(status_code=400, detail=str(e)) from e' (raise-missing-from)
api/v1/guilds/wars.py:6:0: C0411: third party import "pydantic.BaseModel" should be placed before first party imports "backend.core.database.get_database", "backend.services.guilds.wars.GuildWarService", "backend.api.v1.auth.utils.get_current_user"  (wrong-import-order)
api/v1/guilds/wars.py:7:0: C0411: standard import "typing.List" should be placed before third party imports "fastapi.APIRouter", "motor.motor_asyncio.AsyncIOMotorDatabase", "pydantic.BaseModel" and first party imports "backend.core.database.get_database", "backend.services.guilds.wars.GuildWarService", "backend.api.v1.auth.utils.get_current_user"  (wrong-import-order)
************* Module backend.api.v1.guilds.router
api/v1/guilds/router.py:1:0: C0114: Missing module docstring (missing-module-docstring)
api/v1/guilds/router.py:12:0: C0115: Missing class docstring (missing-class-docstring)
api/v1/guilds/router.py:18:0: C0115: Missing class docstring (missing-class-docstring)
api/v1/guilds/router.py:47:8: W0707: Consider explicitly re-raising using 'raise HTTPException(status_code=400, detail=str(e)) from e' (raise-missing-from)
api/v1/guilds/router.py:90:8: W0707: Consider explicitly re-raising using 'raise HTTPException(status_code=400, detail=str(e)) from e' (raise-missing-from)
api/v1/guilds/router.py:109:8: W0707: Consider explicitly re-raising using 'raise HTTPException(status_code=400, detail=str(e)) from e' (raise-missing-from)
api/v1/guilds/router.py:6:0: C0411: third party import "pydantic.BaseModel" should be placed before first party imports "backend.core.database.get_database", "backend.services.guilds.management.GuildManagementService", "backend.api.v1.auth.utils.get_current_user"  (wrong-import-order)
api/v1/guilds/router.py:7:0: C0411: standard import "typing.List" should be placed before third party imports "fastapi.APIRouter", "motor.motor_asyncio.AsyncIOMotorDatabase", "pydantic.BaseModel" and first party imports "backend.core.database.get_database", "backend.services.guilds.management.GuildManagementService", "backend.api.v1.auth.utils.get_current_user"  (wrong-import-order)
************* Module backend.api.v1.guilds.management
api/v1/guilds/management.py:1:0: C0114: Missing module docstring (missing-module-docstring)
api/v1/guilds/management.py:12:0: C0115: Missing class docstring (missing-class-docstring)
api/v1/guilds/management.py:16:0: C0115: Missing class docstring (missing-class-docstring)
api/v1/guilds/management.py:21:0: C0115: Missing class docstring (missing-class-docstring)
api/v1/guilds/management.py:42:8: W0707: Consider explicitly re-raising using 'raise HTTPException(status_code=400, detail=str(e)) from e' (raise-missing-from)
api/v1/guilds/management.py:62:8: W0707: Consider explicitly re-raising using 'raise HTTPException(status_code=400, detail=str(e)) from e' (raise-missing-from)
api/v1/guilds/management.py:85:8: W0707: Consider explicitly re-raising using 'raise HTTPException(status_code=400, detail=str(e)) from e' (raise-missing-from)
api/v1/guilds/management.py:7:0: C0411: third party import "pydantic.BaseModel" should be placed before first party imports "backend.core.database.get_database", "backend.services.guilds.management.GuildManagementService", "backend.api.v1.auth.utils.get_current_user", "backend.models.guilds.guild.GuildRank"  (wrong-import-order)
************* Module backend.api.v1.guilds.territories
api/v1/guilds/territories.py:1:0: C0114: Missing module docstring (missing-module-docstring)
api/v1/guilds/territories.py:73:8: W0707: Consider explicitly re-raising using 'raise HTTPException(status_code=400, detail=str(e)) from e' (raise-missing-from)
api/v1/guilds/territories.py:97:8: W0707: Consider explicitly re-raising using 'raise HTTPException(status_code=400, detail=str(e)) from e' (raise-missing-from)
api/v1/guilds/territories.py:6:0: C0411: standard import "typing.List" should be placed before third party imports "fastapi.APIRouter", "motor.motor_asyncio.AsyncIOMotorDatabase" and first party imports "backend.core.database.get_database", "backend.services.guilds.territories.TerritoryService", "backend.api.v1.auth.utils.get_current_user"  (wrong-import-order)
************* Module backend.api.v1.karma
api/v1/karma/__init__.py:1:0: C0114: Missing module docstring (missing-module-docstring)
************* Module backend.api.v1.karma.schemas
api/v1/karma/schemas.py:34:0: C0304: Final newline missing (missing-final-newline)
api/v1/karma/schemas.py:1:0: C0114: Missing module docstring (missing-module-docstring)
api/v1/karma/schemas.py:2:0: C0411: standard import "datetime.datetime" should be placed before third party import "pydantic.BaseModel" (wrong-import-order)
api/v1/karma/schemas.py:3:0: C0411: standard import "typing.Optional" should be placed before third party import "pydantic.BaseModel" (wrong-import-order)
************* Module backend.api.v1.karma.router
api/v1/karma/router.py:106:0: C0304: Final newline missing (missing-final-newline)
api/v1/karma/router.py:1:0: C0114: Missing module docstring (missing-module-docstring)
api/v1/karma/router.py:3:0: C0411: standard import "typing.List" should be placed before third party imports "fastapi.APIRouter", "motor.motor_asyncio.AsyncIOMotorDatabase" (wrong-import-order)
api/v1/karma/router.py:6:0: C0411: first party import "backend.core.database.get_database" should be placed before local import "schemas.KarmaScoreResponse" (wrong-import-order)
api/v1/karma/router.py:7:0: C0411: first party import "backend.api.v1.auth.router.get_current_user_dep" should be placed before local import "schemas.KarmaScoreResponse" (wrong-import-order)
api/v1/karma/router.py:8:0: C0411: first party import "backend.models.player.player.Player" should be placed before local import "schemas.KarmaScoreResponse" (wrong-import-order)
api/v1/karma/router.py:9:0: C0411: first party import "backend.services.karma.calculator.KarmaCalculator" should be placed before local import "schemas.KarmaScoreResponse" (wrong-import-order)
************* Module backend.api.v1.karma.events.router
api/v1/karma/events/router.py:1:0: C0114: Missing module docstring (missing-module-docstring)
api/v1/karma/events/router.py:20:4: W0613: Unused argument 'current_user' (unused-argument)
************* Module backend.api.v1.crafting
api/v1/crafting/__init__.py:1:0: C0114: Missing module docstring (missing-module-docstring)
************* Module backend.api.v1.crafting.schemas
api/v1/crafting/schemas.py:1:0: C0114: Missing module docstring (missing-module-docstring)
api/v1/crafting/schemas.py:6:0: C0115: Missing class docstring (missing-class-docstring)
api/v1/crafting/schemas.py:12:0: C0115: Missing class docstring (missing-class-docstring)
api/v1/crafting/schemas.py:19:0: C0115: Missing class docstring (missing-class-docstring)
api/v1/crafting/schemas.py:29:0: C0115: Missing class docstring (missing-class-docstring)
api/v1/crafting/schemas.py:35:0: C0115: Missing class docstring (missing-class-docstring)
api/v1/crafting/schemas.py:44:0: C0115: Missing class docstring (missing-class-docstring)
api/v1/crafting/schemas.py:49:0: C0115: Missing class docstring (missing-class-docstring)
api/v1/crafting/schemas.py:59:0: C0115: Missing class docstring (missing-class-docstring)
api/v1/crafting/schemas.py:67:0: C0115: Missing class docstring (missing-class-docstring)
api/v1/crafting/schemas.py:71:0: C0115: Missing class docstring (missing-class-docstring)
api/v1/crafting/schemas.py:2:0: C0411: standard import "typing.List" should be placed before third party import "pydantic.BaseModel" (wrong-import-order)
api/v1/crafting/schemas.py:3:0: C0411: standard import "datetime.datetime" should be placed before third party import "pydantic.BaseModel" (wrong-import-order)
************* Module backend.api.v1.crafting.router
api/v1/crafting/router.py:1:0: C0114: Missing module docstring (missing-module-docstring)
api/v1/crafting/router.py:2:0: E0611: No name 'get_current_user' in module 'backend.core.security' (no-name-in-module)
api/v1/crafting/router.py:4:0: E0611: No name 'PlayerService' in module 'backend.services.player.profile' (no-name-in-module)
api/v1/crafting/router.py:35:4: W0613: Unused argument 'current_user' (unused-argument)
************* Module backend.api.v1.ai.karma_arbiter.router
api/v1/ai/karma_arbiter/router.py:8:0: E0401: Unable to import 'backend.api.services.ai.karma_arbiter.arbiter' (import-error)
api/v1/ai/karma_arbiter/router.py:9:0: E0401: Unable to import 'backend.api.services.ai.cost_tracker' (import-error)
api/v1/ai/karma_arbiter/router.py:10:0: E0401: Unable to import 'backend.api.v1.deps' (import-error)
api/v1/ai/karma_arbiter/router.py:44:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/v1/ai/karma_arbiter/router.py:45:8: W0707: Consider explicitly re-raising using 'raise HTTPException(status_code=500, detail=str(e)) from e' (raise-missing-from)
api/v1/ai/karma_arbiter/router.py:20:4: W0613: Unused argument 'current_user' (unused-argument)
api/v1/ai/karma_arbiter/router.py:50:4: W0613: Unused argument 'current_user' (unused-argument)
api/v1/ai/karma_arbiter/router.py:61:4: W0613: Unused argument 'current_user' (unused-argument)
api/v1/ai/karma_arbiter/router.py:4:0: C0411: standard import "typing.Dict" should be placed before third party import "fastapi.APIRouter" (wrong-import-order)
api/v1/ai/karma_arbiter/router.py:5:0: C0411: standard import "logging" should be placed before third party import "fastapi.APIRouter" (wrong-import-order)
************* Module backend.api.v1.ai.companion.router
api/v1/ai/companion/router.py:8:0: E0401: Unable to import 'backend.api.services.ai.companion.companion' (import-error)
api/v1/ai/companion/router.py:9:0: E0401: Unable to import 'backend.api.services.ai.cost_tracker' (import-error)
api/v1/ai/companion/router.py:10:0: E0401: Unable to import 'backend.api.v1.deps' (import-error)
api/v1/ai/companion/router.py:34:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/v1/ai/companion/router.py:35:8: W0707: Consider explicitly re-raising using 'raise HTTPException(status_code=500, detail=str(e)) from e' (raise-missing-from)
api/v1/ai/companion/router.py:54:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/v1/ai/companion/router.py:55:8: W0707: Consider explicitly re-raising using 'raise HTTPException(status_code=500, detail=str(e)) from e' (raise-missing-from)
api/v1/ai/companion/router.py:69:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/v1/ai/companion/router.py:70:8: W0707: Consider explicitly re-raising using 'raise HTTPException(status_code=500, detail=str(e)) from e' (raise-missing-from)
api/v1/ai/companion/router.py:75:4: W0613: Unused argument 'current_user' (unused-argument)
api/v1/ai/companion/router.py:4:0: C0411: standard import "typing.Dict" should be placed before third party import "fastapi.APIRouter" (wrong-import-order)
api/v1/ai/companion/router.py:5:0: C0411: standard import "logging" should be placed before third party import "fastapi.APIRouter" (wrong-import-order)
************* Module backend.api.v1.ai.oracle.router
api/v1/ai/oracle/router.py:8:0: E0401: Unable to import 'backend.api.services.ai.oracle.oracle' (import-error)
api/v1/ai/oracle/router.py:9:0: E0401: Unable to import 'backend.api.services.ai.cost_tracker' (import-error)
api/v1/ai/oracle/router.py:10:0: E0401: Unable to import 'backend.api.v1.deps' (import-error)
api/v1/ai/oracle/router.py:37:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/v1/ai/oracle/router.py:38:8: W0707: Consider explicitly re-raising using 'raise HTTPException(status_code=500, detail=str(e)) from e' (raise-missing-from)
api/v1/ai/oracle/router.py:52:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/v1/ai/oracle/router.py:53:8: W0707: Consider explicitly re-raising using 'raise HTTPException(status_code=500, detail=str(e)) from e' (raise-missing-from)
api/v1/ai/oracle/router.py:72:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/v1/ai/oracle/router.py:73:8: W0707: Consider explicitly re-raising using 'raise HTTPException(status_code=500, detail=str(e)) from e' (raise-missing-from)
api/v1/ai/oracle/router.py:78:4: W0613: Unused argument 'current_user' (unused-argument)
api/v1/ai/oracle/router.py:89:4: W0613: Unused argument 'current_user' (unused-argument)
api/v1/ai/oracle/router.py:4:0: C0411: standard import "typing.Dict" should be placed before third party import "fastapi.APIRouter" (wrong-import-order)
api/v1/ai/oracle/router.py:5:0: C0411: standard import "logging" should be placed before third party import "fastapi.APIRouter" (wrong-import-order)
************* Module backend.api.v1.combat.schemas
api/v1/combat/schemas.py:4:0: C0411: standard import "typing.Optional" should be placed before third party import "pydantic.BaseModel" (wrong-import-order)
api/v1/combat/schemas.py:5:0: C0411: standard import "datetime.datetime" should be placed before third party import "pydantic.BaseModel" (wrong-import-order)
************* Module backend.api.v1.combat.router
api/v1/combat/router.py:6:0: E0611: No name 'get_current_user' in module 'backend.core.security' (no-name-in-module)
api/v1/combat/router.py:41:8: W0707: Consider explicitly re-raising using 'raise HTTPException(status_code=status.HTTP_400_BAD_REQUEST, detail=str(e)) from e' (raise-missing-from)
api/v1/combat/router.py:64:8: W0707: Consider explicitly re-raising using 'raise HTTPException(status_code=status.HTTP_400_BAD_REQUEST, detail=str(e)) from e' (raise-missing-from)
api/v1/combat/router.py:83:8: W0707: Consider explicitly re-raising using 'raise HTTPException(status_code=status.HTTP_400_BAD_REQUEST, detail=str(e)) from e' (raise-missing-from)
api/v1/combat/router.py:106:8: W0707: Consider explicitly re-raising using 'raise HTTPException(status_code=status.HTTP_500_INTERNAL_SERVER_ERROR, detail=str(e)) from e' (raise-missing-from)
api/v1/combat/router.py:128:8: W0707: Consider explicitly re-raising using 'raise HTTPException(status_code=status.HTTP_400_BAD_REQUEST, detail=str(e)) from e' (raise-missing-from)
api/v1/combat/router.py:143:8: W0707: Consider explicitly re-raising using 'raise HTTPException(status_code=status.HTTP_404_NOT_FOUND, detail=str(e)) from e' (raise-missing-from)
api/v1/combat/router.py:137:4: W0613: Unused argument 'current_user' (unused-argument)
api/v1/combat/router.py:162:8: W0707: Consider explicitly re-raising using 'raise HTTPException(status_code=status.HTTP_400_BAD_REQUEST, detail=str(e)) from e' (raise-missing-from)
api/v1/combat/router.py:177:8: W0707: Consider explicitly re-raising using 'raise HTTPException(status_code=status.HTTP_500_INTERNAL_SERVER_ERROR, detail=str(e)) from e' (raise-missing-from)
api/v1/combat/router.py:198:8: W0707: Consider explicitly re-raising using 'raise HTTPException(status_code=status.HTTP_500_INTERNAL_SERVER_ERROR, detail=str(e)) from e' (raise-missing-from)
api/v1/combat/router.py:4:0: C0411: standard import "typing.Dict" should be placed before third party import "fastapi.APIRouter" (wrong-import-order)
************* Module backend.api.v1.combat.abilities.router
api/v1/combat/abilities/router.py:6:0: E0611: No name 'get_current_user' in module 'backend.core.security' (no-name-in-module)
api/v1/combat/abilities/router.py:25:8: W0707: Consider explicitly re-raising using 'raise HTTPException(status_code=status.HTTP_500_INTERNAL_SERVER_ERROR, detail=str(e)) from e' (raise-missing-from)
api/v1/combat/abilities/router.py:34:4: W0621: Redefining name 'CombatAbilitiesService' from outer scope (line 7) (redefined-outer-name)
api/v1/combat/abilities/router.py:34:4: W0404: Reimport 'CombatAbilitiesService' (imported line 7) (reimported)
api/v1/combat/abilities/router.py:73:4: W0621: Redefining name 'CombatAbilitiesService' from outer scope (line 7) (redefined-outer-name)
api/v1/combat/abilities/router.py:73:4: W0404: Reimport 'CombatAbilitiesService' (imported line 7) (reimported)
api/v1/combat/abilities/router.py:4:0: C0411: standard import "typing.Dict" should be placed before third party import "fastapi.APIRouter" (wrong-import-order)
************* Module backend.api.v1.combat.duel.schemas
api/v1/combat/duel/schemas.py:4:0: C0411: standard import "typing.Optional" should be placed before third party import "pydantic.BaseModel" (wrong-import-order)
************* Module backend.api.v1.combat.duel.router
api/v1/combat/duel/router.py:6:0: E0611: No name 'get_current_user' in module 'backend.core.security' (no-name-in-module)
api/v1/combat/duel/router.py:33:8: W0707: Consider explicitly re-raising using 'raise HTTPException(status_code=status.HTTP_400_BAD_REQUEST, detail=str(e)) from e' (raise-missing-from)
api/v1/combat/duel/router.py:4:0: C0411: standard import "typing.Dict" should be placed before third party import "fastapi.APIRouter" (wrong-import-order)
************* Module backend.api.v1.combat.arena.schemas
api/v1/combat/arena/schemas.py:4:0: C0411: standard import "typing.Optional" should be placed before third party import "pydantic.BaseModel" (wrong-import-order)
************* Module backend.api.v1.combat.arena.router
api/v1/combat/arena/router.py:8:0: E0611: No name 'get_current_user' in module 'backend.core.security' (no-name-in-module)
api/v1/combat/arena/router.py:44:8: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
api/v1/combat/arena/router.py:58:8: W0707: Consider explicitly re-raising using 'raise HTTPException(status_code=status.HTTP_400_BAD_REQUEST, detail=str(e)) from e' (raise-missing-from)
api/v1/combat/arena/router.py:73:4: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
api/v1/combat/arena/router.py:189:19: W0212: Access to a protected member _create_battle of a client class (protected-access)
api/v1/combat/arena/router.py:4:0: C0411: standard import "typing.Dict" should be placed before third party import "fastapi.APIRouter" (wrong-import-order)
api/v1/combat/arena/router.py:5:0: C0411: standard import "datetime.datetime" should be placed before third party import "fastapi.APIRouter" (wrong-import-order)
api/v1/combat/arena/router.py:6:0: C0411: standard import "random" should be placed before third party import "fastapi.APIRouter" (wrong-import-order)
************* Module backend.api.v1.actions
api/v1/actions/__init__.py:1:0: C0114: Missing module docstring (missing-module-docstring)
************* Module backend.api.v1.actions.cooldown
api/v1/actions/cooldown.py:4:0: C0411: standard import "typing.Dict" should be placed before third party import "fastapi.APIRouter" (wrong-import-order)
************* Module backend.api.v1.actions.schemas
api/v1/actions/schemas.py:1:0: C0114: Missing module docstring (missing-module-docstring)
api/v1/actions/schemas.py:3:0: C0115: Missing class docstring (missing-class-docstring)
api/v1/actions/schemas.py:6:0: C0115: Missing class docstring (missing-class-docstring)
api/v1/actions/schemas.py:10:0: C0115: Missing class docstring (missing-class-docstring)
api/v1/actions/schemas.py:13:0: C0115: Missing class docstring (missing-class-docstring)
api/v1/actions/schemas.py:17:0: C0115: Missing class docstring (missing-class-docstring)
api/v1/actions/schemas.py:22:0: C0115: Missing class docstring (missing-class-docstring)
************* Module backend.api.v1.actions.router
api/v1/actions/router.py:1:0: C0114: Missing module docstring (missing-module-docstring)
api/v1/actions/router.py:15:44: W0613: Unused argument 'actor' (unused-argument)
api/v1/actions/router.py:169:21: E1101: Instance of 'FieldInfo' has no 'technical_knowledge' member (no-member)
api/v1/actions/router.py:170:8: E1101: Instance of 'FieldInfo' has no 'tactical_mastery' member (no-member)
api/v1/actions/router.py:179:28: E1101: Instance of 'FieldInfo' has no 'credits' member (no-member)
api/v1/actions/router.py:181:8: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
api/v1/actions/router.py:350:23: E1101: Instance of 'FieldInfo' has no 'perception' member (no-member)
api/v1/actions/router.py:351:8: E1101: Instance of 'FieldInfo' has no 'survival_instinct' member (no-member)
api/v1/actions/router.py:360:28: E1101: Instance of 'FieldInfo' has no 'credits' member (no-member)
api/v1/actions/router.py:362:8: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
api/v1/actions/router.py:537:7: E1101: Instance of 'FieldInfo' has no 'credits' member (no-member)
api/v1/actions/router.py:3:0: C0411: standard import "random" should be placed before third party imports "fastapi.APIRouter", "motor.motor_asyncio.AsyncIOMotorDatabase" (wrong-import-order)
api/v1/actions/router.py:8:0: C0411: first party import "backend.core.database.get_database" should be placed before local import "schemas.HackAction" (wrong-import-order)
api/v1/actions/router.py:9:0: C0411: first party import "backend.api.v1.auth.router.get_current_user_dep" should be placed before local import "schemas.HackAction" (wrong-import-order)
api/v1/actions/router.py:10:0: C0411: first party import "backend.models.player.player.Player" should be placed before local import "schemas.HackAction" (wrong-import-order)
api/v1/actions/router.py:11:0: C0411: first party import "backend.models.actions.action.Action" should be placed before local import "schemas.HackAction" (wrong-import-order)
************* Module backend.api.v1.actions.donate
api/v1/actions/donate.py:1:0: C0114: Missing module docstring (missing-module-docstring)
api/v1/actions/donate.py:8:0: C0115: Missing class docstring (missing-class-docstring)
api/v1/actions/donate.py:29:8: W0707: Consider explicitly re-raising using 'raise HTTPException(status_code=400, detail=str(e)) from e' (raise-missing-from)
api/v1/actions/donate.py:31:8: W0707: Consider explicitly re-raising using 'raise HTTPException(status_code=500, detail=f'Action failed: {str(e)}') from e' (raise-missing-from)
api/v1/actions/donate.py:4:0: C0411: third party import "pydantic.BaseModel" should be placed before local imports "services.actions.handler.ActionHandler", "api.deps.get_current_user" (wrong-import-order)
************* Module backend.api.v1.actions.trade
api/v1/actions/trade.py:1:0: C0114: Missing module docstring (missing-module-docstring)
api/v1/actions/trade.py:9:0: C0115: Missing class docstring (missing-class-docstring)
api/v1/actions/trade.py:34:8: W0707: Consider explicitly re-raising using 'raise HTTPException(status_code=400, detail=str(e)) from e' (raise-missing-from)
api/v1/actions/trade.py:36:8: W0707: Consider explicitly re-raising using 'raise HTTPException(status_code=500, detail=f'Action failed: {str(e)}') from e' (raise-missing-from)
api/v1/actions/trade.py:4:0: C0411: third party import "pydantic.BaseModel" should be placed before local imports "services.actions.handler.ActionHandler", "api.deps.get_current_user" (wrong-import-order)
api/v1/actions/trade.py:5:0: C0411: standard import "typing.Dict" should be placed before third party imports "fastapi.APIRouter", "pydantic.BaseModel" and local imports "services.actions.handler.ActionHandler", "api.deps.get_current_user" (wrong-import-order)
************* Module backend.api.v1.actions.hack
api/v1/actions/hack.py:1:0: C0114: Missing module docstring (missing-module-docstring)
api/v1/actions/hack.py:8:0: C0115: Missing class docstring (missing-class-docstring)
api/v1/actions/hack.py:27:8: W0707: Consider explicitly re-raising using 'raise HTTPException(status_code=400, detail=str(e)) from e' (raise-missing-from)
api/v1/actions/hack.py:29:8: W0707: Consider explicitly re-raising using 'raise HTTPException(status_code=500, detail=f'Action failed: {str(e)}') from e' (raise-missing-from)
api/v1/actions/hack.py:4:0: C0411: third party import "pydantic.BaseModel" should be placed before local imports "services.actions.handler.ActionHandler", "api.deps.get_current_user" (wrong-import-order)
************* Module backend.api.v1.actions.steal
api/v1/actions/steal.py:1:0: C0114: Missing module docstring (missing-module-docstring)
api/v1/actions/steal.py:8:0: C0115: Missing class docstring (missing-class-docstring)
api/v1/actions/steal.py:27:8: W0707: Consider explicitly re-raising using 'raise HTTPException(status_code=400, detail=str(e)) from e' (raise-missing-from)
api/v1/actions/steal.py:29:8: W0707: Consider explicitly re-raising using 'raise HTTPException(status_code=500, detail=f'Action failed: {str(e)}') from e' (raise-missing-from)
api/v1/actions/steal.py:4:0: C0411: third party import "pydantic.BaseModel" should be placed before local imports "services.actions.handler.ActionHandler", "api.deps.get_current_user" (wrong-import-order)
************* Module backend.api.v1.actions.help
api/v1/actions/help.py:1:0: C0114: Missing module docstring (missing-module-docstring)
api/v1/actions/help.py:8:0: C0115: Missing class docstring (missing-class-docstring)
api/v1/actions/help.py:27:8: W0707: Consider explicitly re-raising using 'raise HTTPException(status_code=400, detail=str(e)) from e' (raise-missing-from)
api/v1/actions/help.py:29:8: W0707: Consider explicitly re-raising using 'raise HTTPException(status_code=500, detail=f'Action failed: {str(e)}') from e' (raise-missing-from)
api/v1/actions/help.py:4:0: C0411: third party import "pydantic.BaseModel" should be placed before local imports "services.actions.handler.ActionHandler", "api.deps.get_current_user" (wrong-import-order)
************* Module backend.api.v1.world.schemas
api/v1/world/schemas.py:45:4: C0115: Missing class docstring (missing-class-docstring)
api/v1/world/schemas.py:63:4: C0115: Missing class docstring (missing-class-docstring)
api/v1/world/schemas.py:80:4: C0115: Missing class docstring (missing-class-docstring)
api/v1/world/schemas.py:96:4: C0115: Missing class docstring (missing-class-docstring)
api/v1/world/schemas.py:4:0: C0411: standard import "typing.List" should be placed before third party import "pydantic.BaseModel" (wrong-import-order)
api/v1/world/schemas.py:5:0: C0411: standard import "datetime.datetime" should be placed before third party import "pydantic.BaseModel" (wrong-import-order)
api/v1/world/schemas.py:6:0: C0411: standard import "enum.Enum" should be placed before third party import "pydantic.BaseModel" (wrong-import-order)
************* Module backend.api.v1.world.events
api/v1/world/events.py:8:0: E0611: No name 'EventResponse' in module 'backend.api.v1.world.schemas' (no-name-in-module)
api/v1/world/events.py:8:0: E0611: No name 'EventListResponse' in module 'backend.api.v1.world.schemas' (no-name-in-module)
api/v1/world/events.py:8:0: E0611: No name 'TriggerEventResponse' in module 'backend.api.v1.world.schemas' (no-name-in-module)
api/v1/world/events.py:8:0: E0611: No name 'ParticipationRequest' in module 'backend.api.v1.world.schemas' (no-name-in-module)
api/v1/world/events.py:8:0: E0611: No name 'ParticipationResponse' in module 'backend.api.v1.world.schemas' (no-name-in-module)
api/v1/world/events.py:16:0: E0611: No name 'get_current_user' in module 'backend.api.v1.auth.utils' (no-name-in-module)
api/v1/world/events.py:119:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/v1/world/events.py:120:8: W0707: Consider explicitly re-raising using 'raise HTTPException(status_code=status.HTTP_500_INTERNAL_SERVER_ERROR, detail=f'Failed to trigger event: {str(e)}') from e' (raise-missing-from)
api/v1/world/events.py:82:4: W0613: Unused argument 'current_user' (unused-argument)
api/v1/world/events.py:4:0: C0411: standard import "typing.Optional" should be placed before third party import "fastapi.APIRouter" (wrong-import-order)
api/v1/world/events.py:18:0: C0411: standard import "logging" should be placed before third party import "fastapi.APIRouter" and local imports "core.database.get_database", "services.world.event_manager.EventManager", "schemas.EventResponse", "auth.utils.get_current_user" (wrong-import-order)
************* Module backend.api.v1.world.notifications
api/v1/world/notifications.py:27:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/v1/world/notifications.py:33:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/v1/world/notifications.py:48:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/v1/world/notifications.py:111:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/v1/world/notifications.py:4:0: C0411: standard import "typing.Dict" should be placed before third party import "fastapi.APIRouter" (wrong-import-order)
api/v1/world/notifications.py:5:0: C0411: standard import "json" should be placed before third party import "fastapi.APIRouter" (wrong-import-order)
api/v1/world/notifications.py:6:0: C0411: standard import "logging" should be placed before third party import "fastapi.APIRouter" (wrong-import-order)
************* Module backend.api.v1.world.router
api/v1/world/router.py:5:0: E0611: No name 'get_current_player' in module 'backend.api.deps' (no-name-in-module)
api/v1/world/router.py:23:4: W0613: Unused argument 'current_player' (unused-argument)
api/v1/world/router.py:33:4: W0613: Unused argument 'current_player' (unused-argument)
api/v1/world/router.py:43:4: W0613: Unused argument 'current_player' (unused-argument)
api/v1/world/router.py:71:4: W0613: Unused argument 'current_player' (unused-argument)
api/v1/world/router.py:81:4: W0613: Unused argument 'current_player' (unused-argument)
api/v1/world/router.py:91:4: W0613: Unused argument 'current_player' (unused-argument)
api/v1/world/router.py:106:4: W0613: Unused argument 'current_player' (unused-argument)
api/v1/world/router.py:4:0: C0411: standard import "typing.List" should be placed before third party import "fastapi.APIRouter" (wrong-import-order)
************* Module backend.api.v1.world.state
api/v1/world/state.py:8:0: E0611: No name 'KarmaStatsResponse' in module 'backend.api.v1.world.schemas' (no-name-in-module)
api/v1/world/state.py:8:0: E0611: No name 'TopPlayersResponse' in module 'backend.api.v1.world.schemas' (no-name-in-module)
api/v1/world/state.py:59:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/v1/world/state.py:60:8: W0707: Consider explicitly re-raising using 'raise HTTPException(status_code=status.HTTP_500_INTERNAL_SERVER_ERROR, detail=f'Failed to sync world state: {str(e)}') from e' (raise-missing-from)
api/v1/world/state.py:92:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/v1/world/state.py:93:8: W0707: Consider explicitly re-raising using 'raise HTTPException(status_code=status.HTTP_500_INTERNAL_SERVER_ERROR, detail=f'Failed to get karma statistics: {str(e)}') from e' (raise-missing-from)
api/v1/world/state.py:14:0: C0411: standard import "logging" should be placed before third party import "fastapi.APIRouter" and local imports "core.database.get_database", "services.world.state_manager.WorldStateManager", "services.world.collective_karma.CollectiveKarmaTracker", "schemas.WorldStateResponse" (wrong-import-order)
************* Module backend.api.v1.world.territories
api/v1/world/territories.py:7:0: E0611: No name 'TerritoryResponse' in module 'backend.api.v1.world.schemas' (no-name-in-module)
api/v1/world/territories.py:7:0: E0611: No name 'TerritoryListResponse' in module 'backend.api.v1.world.schemas' (no-name-in-module)
api/v1/world/territories.py:119:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/v1/world/territories.py:120:8: W0707: Consider explicitly re-raising using 'raise HTTPException(status_code=status.HTTP_500_INTERNAL_SERVER_ERROR, detail=f'Failed to initialize territories: {str(e)}') from e' (raise-missing-from)
api/v1/world/territories.py:155:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/v1/world/territories.py:156:8: W0707: Consider explicitly re-raising using 'raise HTTPException(status_code=status.HTTP_500_INTERNAL_SERVER_ERROR, detail=f'Failed to sync territory: {str(e)}') from e' (raise-missing-from)
api/v1/world/territories.py:9:0: C0411: standard import "logging" should be placed before third party import "fastapi.APIRouter" and local imports "core.database.get_database", "services.world.territory_manager.TerritoryManager", "schemas.TerritoryResponse" (wrong-import-order)
************* Module backend.api.v1.investments
api/v1/investments/__init__.py:1:0: C0114: Missing module docstring (missing-module-docstring)
************* Module backend.api.v1.investments.schemas
api/v1/investments/schemas.py:1:0: C0114: Missing module docstring (missing-module-docstring)
api/v1/investments/schemas.py:6:0: C0115: Missing class docstring (missing-class-docstring)
api/v1/investments/schemas.py:14:0: C0115: Missing class docstring (missing-class-docstring)
api/v1/investments/schemas.py:23:0: C0115: Missing class docstring (missing-class-docstring)
api/v1/investments/schemas.py:32:0: C0115: Missing class docstring (missing-class-docstring)
api/v1/investments/schemas.py:40:0: C0115: Missing class docstring (missing-class-docstring)
api/v1/investments/schemas.py:44:0: C0115: Missing class docstring (missing-class-docstring)
api/v1/investments/schemas.py:49:0: C0115: Missing class docstring (missing-class-docstring)
api/v1/investments/schemas.py:59:0: C0115: Missing class docstring (missing-class-docstring)
api/v1/investments/schemas.py:67:0: C0115: Missing class docstring (missing-class-docstring)
api/v1/investments/schemas.py:2:0: C0411: standard import "typing.List" should be placed before third party import "pydantic.BaseModel" (wrong-import-order)
api/v1/investments/schemas.py:3:0: C0411: standard import "datetime.datetime" should be placed before third party import "pydantic.BaseModel" (wrong-import-order)
************* Module backend.api.v1.investments.router
api/v1/investments/router.py:1:0: C0114: Missing module docstring (missing-module-docstring)
api/v1/investments/router.py:2:0: E0611: No name 'get_current_user' in module 'backend.core.security' (no-name-in-module)
api/v1/investments/router.py:29:4: W0613: Unused argument 'current_user' (unused-argument)
************* Module backend.api.websocket.manager
api/websocket/manager.py:1:0: C0114: Missing module docstring (missing-module-docstring)
api/websocket/manager.py:28:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/websocket/manager.py:58:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/websocket/manager.py:67:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/websocket/manager.py:80:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/websocket/manager.py:106:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/websocket/manager.py:118:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/websocket/manager.py:2:0: C0411: standard import "typing.Dict" should be placed before third party import "fastapi.WebSocket" (wrong-import-order)
api/websocket/manager.py:3:0: C0411: standard import "logging" should be placed before third party import "fastapi.WebSocket" (wrong-import-order)
api/websocket/manager.py:4:0: C0411: standard import "datetime.datetime" should be placed before third party import "fastapi.WebSocket" (wrong-import-order)
************* Module backend.api.websocket.handlers
api/websocket/handlers.py:1:0: C0114: Missing module docstring (missing-module-docstring)
api/websocket/handlers.py:28:16: W0621: Redefining name 'handler' from outer scope (line 44) (redefined-outer-name)
api/websocket/handlers.py:27:12: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
api/websocket/handlers.py:32:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/websocket/handlers.py:38:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/websocket/handlers.py:83:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/websocket/handlers.py:2:0: C0411: standard import "logging" should be placed before third party import "fastapi.WebSocket" (wrong-import-order)
************* Module backend.api.websocket.events.player
api/websocket/events/player.py:1:0: C0114: Missing module docstring (missing-module-docstring)
api/websocket/events/player.py:10:4: R1705: Unnecessary "elif" after "return", remove the leading "el" from "elif" (no-else-return)
api/websocket/events/player.py:101:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
************* Module backend.monitoring.health
monitoring/health.py:195:0: C0301: Line too long (133/120) (line-too-long)
monitoring/health.py:196:0: C0301: Line too long (125/120) (line-too-long)
monitoring/health.py:197:0: C0301: Line too long (121/120) (line-too-long)
monitoring/health.py:198:0: C0301: Line too long (129/120) (line-too-long)
monitoring/health.py:107:8: E0401: Unable to import 'psutil' (import-error)
monitoring/health.py:136:8: E0401: Unable to import 'psutil' (import-error)
************* Module backend.monitoring.logger
monitoring/logger.py:143:4: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
monitoring/logger.py:168:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
monitoring/logger.py:180:4: R0917: Too many positional arguments (6/5) (too-many-positional-arguments)
monitoring/logger.py:193:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
************* Module backend.monitoring.metrics
monitoring/metrics.py:4:0: E0401: Unable to import 'psutil' (import-error)
monitoring/metrics.py:5:0: C0411: standard import "typing.Dict" should be placed before third party import "psutil" (wrong-import-order)
monitoring/metrics.py:6:0: C0411: standard import "collections.defaultdict" should be placed before third party import "psutil" (wrong-import-order)
monitoring/metrics.py:7:0: C0411: standard import "datetime.datetime" should be placed before third party import "psutil" (wrong-import-order)
monitoring/metrics.py:8:0: C0411: standard import "asyncio" should be placed before third party import "psutil" (wrong-import-order)
************* Module backend.tutorial
tutorial/__init__.py:4:0: E0611: No name 'TutorialStep' in module 'backend.tutorial.steps' (no-name-in-module)
tutorial/__init__.py:4:0: E0611: No name 'tutorial_steps' in module 'backend.tutorial.steps' (no-name-in-module)
************* Module backend.tutorial.tutorial
tutorial/tutorial.py:19:4: R0917: Too many positional arguments (9/5) (too-many-positional-arguments)
************* Module backend.services.leaderboards.manager
services/leaderboards/manager.py:53:8: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
services/leaderboards/manager.py:206:8: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
services/leaderboards/manager.py:316:8: W0107: Unnecessary pass statement (unnecessary-pass)
************* Module backend.services.achievements.achievement_service
services/achievements/achievement_service.py:1:0: C0114: Missing module docstring (missing-module-docstring)
services/achievements/achievement_service.py:6:0: C0411: standard import "logging" should be placed before first party import "backend.models.achievements.PlayerAchievements"  (wrong-import-order)
************* Module backend.services.quests.manager
services/quests/manager.py:49:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/quests/manager.py:98:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/quests/manager.py:140:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/quests/manager.py:163:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/quests/manager.py:214:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/quests/manager.py:7:0: C0411: standard import "logging" should be placed before third party imports "motor.motor_asyncio.AsyncIOMotorClient", "bson.ObjectId" (wrong-import-order)
************* Module backend.services.quests.tracking
services/quests/tracking.py:68:8: W0613: Unused argument 'action_data' (unused-argument)
services/quests/tracking.py:69:8: W0613: Unused argument 'objective' (unused-argument)
************* Module backend.services.quests.guild
services/quests/guild.py:1:0: C0114: Missing module docstring (missing-module-docstring)
************* Module backend.services.quests.objectives_manager
services/quests/objectives_manager.py:59:8: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
************* Module backend.services.quests.generator
services/quests/generator.py:197:0: C0301: Line too long (150/120) (line-too-long)
services/quests/generator.py:198:0: C0301: Line too long (153/120) (line-too-long)
services/quests/generator.py:199:0: C0301: Line too long (155/120) (line-too-long)
services/quests/generator.py:8:0: E0611: No name 'QuestType' in module 'backend.models.quests.quest' (no-name-in-module)
services/quests/generator.py:20:22: E1121: Too many positional arguments for constructor call (too-many-function-args)
services/quests/generator.py:30:27: E1101: Instance of 'Oracle' has no 'generate_quest' member (no-member)
services/quests/generator.py:59:12: W0612: Unused variable 'i' (unused-variable)
services/quests/generator.py:87:12: W0612: Unused variable 'i' (unused-variable)
services/quests/generator.py:192:8: W0613: Unused argument 'player_level' (unused-argument)
services/quests/generator.py:226:8: W0613: Unused argument 'obj_type' (unused-argument)
************* Module backend.services.quests.daily
services/quests/daily.py:1:0: C0114: Missing module docstring (missing-module-docstring)
services/quests/daily.py:5:0: E0611: No name 'QuestService' in module 'backend.services.quests.manager' (no-name-in-module)
services/quests/daily.py:12:25: E1120: No value for argument 'db' in constructor call (no-value-for-parameter)
services/quests/daily.py:40:32: E1120: No value for argument 'player' in method call (no-value-for-parameter)
************* Module backend.services.quests.templates
services/quests/templates.py:128:8: R1705: Unnecessary "elif" after "return", remove the leading "el" from "elif" (no-else-return)
services/quests/templates.py:125:20: W0612: Unused variable 'trait_value' (unused-variable)
************* Module backend.services.quests.weekly
services/quests/weekly.py:1:0: C0114: Missing module docstring (missing-module-docstring)
services/quests/weekly.py:5:0: E0611: No name 'QuestService' in module 'backend.services.quests.manager' (no-name-in-module)
services/quests/weekly.py:12:25: E1120: No value for argument 'db' in constructor call (no-value-for-parameter)
************* Module backend.services.quests.campaign_manager
services/quests/campaign_manager.py:56:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/quests/campaign_manager.py:91:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/quests/campaign_manager.py:153:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/quests/campaign_manager.py:194:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/quests/campaign_manager.py:234:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/quests/campaign_manager.py:259:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/quests/campaign_manager.py:7:0: C0411: standard import "logging" should be placed before third party imports "motor.motor_asyncio.AsyncIOMotorClient", "bson.ObjectId" (wrong-import-order)
************* Module backend.services.quests.notifications
services/quests/notifications.py:1:0: C0114: Missing module docstring (missing-module-docstring)
************* Module backend.services.quests.world
services/quests/world.py:1:0: C0114: Missing module docstring (missing-module-docstring)
************* Module backend.services.quests.hidden_quest_discoverer
services/quests/hidden_quest_discoverer.py:92:0: C0325: Unnecessary parens after 'not' keyword (superfluous-parens)
services/quests/hidden_quest_discoverer.py:100:0: C0325: Unnecessary parens after 'not' keyword (superfluous-parens)
services/quests/hidden_quest_discoverer.py:46:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/quests/hidden_quest_discoverer.py:60:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/quests/hidden_quest_discoverer.py:63:4: R0911: Too many return statements (7/6) (too-many-return-statements)
services/quests/hidden_quest_discoverer.py:166:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/quests/hidden_quest_discoverer.py:188:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/quests/hidden_quest_discoverer.py:214:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/quests/hidden_quest_discoverer.py:6:0: C0411: standard import "random" should be placed before third party import "motor.motor_asyncio.AsyncIOMotorClient" (wrong-import-order)
services/quests/hidden_quest_discoverer.py:7:0: C0411: standard import "logging" should be placed before third party import "motor.motor_asyncio.AsyncIOMotorClient" (wrong-import-order)
************* Module backend.services.quests.progression
services/quests/progression.py:68:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/quests/progression.py:131:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/quests/progression.py:149:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/quests/progression.py:5:0: C0411: standard import "logging" should be placed before third party import "motor.motor_asyncio.AsyncIOMotorClient" (wrong-import-order)
************* Module backend.services.quests.hidden
services/quests/hidden.py:1:0: C0114: Missing module docstring (missing-module-docstring)
services/quests/hidden.py:64:16: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
************* Module backend.services.quests.requirements
services/quests/requirements.py:1:0: C0114: Missing module docstring (missing-module-docstring)
services/quests/requirements.py:8:4: R0911: Too many return statements (9/6) (too-many-return-statements)
************* Module backend.services.quests.campaigns
services/quests/campaigns.py:97:0: C0325: Unnecessary parens after '=' keyword (superfluous-parens)
services/quests/campaigns.py:1:0: C0114: Missing module docstring (missing-module-docstring)
services/quests/campaigns.py:43:44: W0613: Unused argument 'player_id' (unused-argument)
************* Module backend.services.quests.rewards
services/quests/rewards.py:40:16: W0622: Redefining built-in 'credits' (redefined-builtin)
services/quests/rewards.py:97:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/quests/rewards.py:156:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/quests/rewards.py:162:12: R1705: Unnecessary "elif" after "return", remove the leading "el" from "elif" (no-else-return)
services/quests/rewards.py:203:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/quests/rewards.py:216:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/quests/rewards.py:6:0: C0411: standard import "logging" should be placed before third party import "motor.motor_asyncio.AsyncIOMotorClient" (wrong-import-order)
************* Module backend.services.quests.filters
services/quests/filters.py:70:8: R1705: Unnecessary "elif" after "return", remove the leading "el" from "elif" (no-else-return)
************* Module backend.services.quests.campaign_service
services/quests/campaign_service.py:7:0: E0611: No name 'CampaignType' in module 'backend.models.quests.campaign' (no-name-in-module)
services/quests/campaign_service.py:78:8: W0613: Unused argument 'player' (unused-argument)
************* Module backend.services.social
services/social/__init__.py:1:0: C0114: Missing module docstring (missing-module-docstring)
************* Module backend.services.social.marriage
services/social/marriage.py:1:0: C0114: Missing module docstring (missing-module-docstring)
services/social/marriage.py:7:0: C0115: Missing class docstring (missing-class-docstring)
************* Module backend.services.social.relationships
services/social/relationships.py:1:0: C0114: Missing module docstring (missing-module-docstring)
services/social/relationships.py:7:0: C0115: Missing class docstring (missing-class-docstring)
services/social/relationships.py:15:8: W0622: Redefining built-in 'type' (redefined-builtin)
services/social/relationships.py:67:8: W0622: Redefining built-in 'type' (redefined-builtin)
services/social/relationships.py:91:8: W0622: Redefining built-in 'type' (redefined-builtin)
************* Module backend.services.social.mentorship
services/social/mentorship.py:1:0: C0114: Missing module docstring (missing-module-docstring)
services/social/mentorship.py:7:0: C0115: Missing class docstring (missing-class-docstring)
services/social/mentorship.py:165:8: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
************* Module backend.services.social.alliances
services/social/alliances.py:1:0: C0114: Missing module docstring (missing-module-docstring)
services/social/alliances.py:6:0: C0115: Missing class docstring (missing-class-docstring)
************* Module backend.services.seasonal.battle_pass
services/seasonal/battle_pass.py:6:0: C0411: standard import "uuid" should be placed before first party import "backend.core.database.db"  (wrong-import-order)
************* Module backend.services.seasonal.seasons
services/seasonal/seasons.py:338:8: W0107: Unnecessary pass statement (unnecessary-pass)
services/seasonal/seasons.py:6:0: C0411: standard import "uuid" should be placed before first party import "backend.core.database.db"  (wrong-import-order)
************* Module backend.services.player.visibility
services/player/visibility.py:165:0: C0304: Final newline missing (missing-final-newline)
services/player/visibility.py:1:0: C0114: Missing module docstring (missing-module-docstring)
services/player/visibility.py:2:0: C0411: standard import "typing.Dict" should be placed before third party import "motor.motor_asyncio.AsyncIOMotorDatabase" (wrong-import-order)
************* Module backend.services.player.superpowers
services/player/superpowers.py:1:0: C0114: Missing module docstring (missing-module-docstring)
services/player/superpowers.py:5:0: C0411: standard import "datetime.datetime" should be placed before first party import "backend.models.player.superpowers.PlayerSuperpowers"  (wrong-import-order)
services/player/superpowers.py:6:0: C0411: standard import "logging" should be placed before first party import "backend.models.player.superpowers.PlayerSuperpowers"  (wrong-import-order)
************* Module backend.services.player.stats_calculator
services/player/stats_calculator.py:89:8: W0612: Unused variable 'greed' (unused-variable)
services/player/stats_calculator.py:4:0: W0611: Unused import math (unused-import)
************* Module backend.services.player.progression
services/player/progression.py:96:0: C0304: Final newline missing (missing-final-newline)
services/player/progression.py:1:0: C0114: Missing module docstring (missing-module-docstring)
services/player/progression.py:2:0: C0411: standard import "typing.Dict" should be placed before third party import "motor.motor_asyncio.AsyncIOMotorDatabase" (wrong-import-order)
services/player/progression.py:4:0: C0411: standard import "math" should be placed before third party imports "motor.motor_asyncio.AsyncIOMotorDatabase", "fastapi.HTTPException" (wrong-import-order)
************* Module backend.services.player.traits
services/player/traits.py:172:0: C0304: Final newline missing (missing-final-newline)
services/player/traits.py:1:0: C0114: Missing module docstring (missing-module-docstring)
services/player/traits.py:107:8: R1705: Unnecessary "elif" after "return", remove the leading "el" from "elif" (no-else-return)
services/player/traits.py:2:0: C0411: standard import "typing.Dict" should be placed before third party import "motor.motor_asyncio.AsyncIOMotorDatabase" (wrong-import-order)
services/player/traits.py:4:0: C0411: third party import "fastapi.HTTPException" should be placed before first party import "backend.models.player.player.Player"  (wrong-import-order)
************* Module backend.services.player.prestige
services/player/prestige.py:1:0: C0114: Missing module docstring (missing-module-docstring)
services/player/prestige.py:131:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/player/prestige.py:3:0: C0411: standard import "logging" should be placed before first party import "backend.models.player.prestige.PlayerPrestige"  (wrong-import-order)
************* Module backend.services.player.profile
services/player/profile.py:6:0: C0411: third party import "bson.ObjectId" should be placed before first party import "backend.core.database.db"  (wrong-import-order)
services/player/profile.py:7:0: C0411: third party import "fastapi.HTTPException" should be placed before first party import "backend.core.database.db"  (wrong-import-order)
************* Module backend.services.player.legacy
services/player/legacy.py:1:0: C0114: Missing module docstring (missing-module-docstring)
services/player/legacy.py:173:4: R0917: Too many positional arguments (6/5) (too-many-positional-arguments)
services/player/legacy.py:5:0: C0411: standard import "datetime.datetime" should be placed before first party import "backend.models.player.legacy.PlayerLegacy"  (wrong-import-order)
services/player/legacy.py:6:0: C0411: standard import "logging" should be placed before first party import "backend.models.player.legacy.PlayerLegacy"  (wrong-import-order)
************* Module backend.services.player.inventory_manager
services/player/inventory_manager.py:52:8: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
************* Module backend.services.player.skill_trees
services/player/skill_trees.py:1:0: C0114: Missing module docstring (missing-module-docstring)
services/player/skill_trees.py:118:8: W0613: Unused argument 'player_traits' (unused-argument)
services/player/skill_trees.py:5:0: C0411: standard import "logging" should be placed before first party import "backend.models.player.skill_trees.PlayerSkillTrees"  (wrong-import-order)
************* Module backend.services.real_estate
services/real_estate/__init__.py:1:0: C0114: Missing module docstring (missing-module-docstring)
************* Module backend.services.real_estate.manager
services/real_estate/manager.py:1:0: C0114: Missing module docstring (missing-module-docstring)
services/real_estate/manager.py:246:4: R0917: Too many positional arguments (6/5) (too-many-positional-arguments)
services/real_estate/manager.py:248:8: W0613: Unused argument 'player_id' (unused-argument)
************* Module backend.services.real_estate.property_types
services/real_estate/property_types.py:1:0: C0114: Missing module docstring (missing-module-docstring)
************* Module backend.services.economy.currency
services/economy/currency.py:221:4: R0917: Too many positional arguments (6/5) (too-many-positional-arguments)
services/economy/currency.py:5:0: C0411: standard import "datetime.datetime" should be placed before third party import "bson.ObjectId" (wrong-import-order)
************* Module backend.services.economy.transactions
services/economy/transactions.py:17:4: R0917: Too many positional arguments (7/5) (too-many-positional-arguments)
************* Module backend.services.tournaments.manager
services/tournaments/manager.py:228:8: W0106: Expression "2**math.ceil(math.log2(len(players)))" is assigned to nothing (expression-not-assigned)
services/tournaments/manager.py:220:8: W0613: Unused argument 'tournament_id' (unused-argument)
services/tournaments/manager.py:9:0: C0411: standard import "uuid" should be placed before first party imports "backend.core.database.db", "backend.models.tournaments.tournament.TournamentType"  (wrong-import-order)
services/tournaments/manager.py:10:0: C0411: standard import "math" should be placed before first party imports "backend.core.database.db", "backend.models.tournaments.tournament.TournamentType"  (wrong-import-order)
************* Module backend.services.guilds
services/guilds/__init__.py:1:0: C0114: Missing module docstring (missing-module-docstring)
************* Module backend.services.guilds.wars
services/guilds/wars.py:13:0: C0301: Line too long (132/120) (line-too-long)
services/guilds/wars.py:1:0: C0114: Missing module docstring (missing-module-docstring)
services/guilds/wars.py:7:0: C0115: Missing class docstring (missing-class-docstring)
************* Module backend.services.guilds.management
services/guilds/management.py:1:0: C0114: Missing module docstring (missing-module-docstring)
services/guilds/management.py:6:0: C0115: Missing class docstring (missing-class-docstring)
services/guilds/management.py:171:70: W0622: Redefining built-in 'credits' (redefined-builtin)
************* Module backend.services.guilds.territories
services/guilds/territories.py:1:0: C0114: Missing module docstring (missing-module-docstring)
services/guilds/territories.py:7:0: C0115: Missing class docstring (missing-class-docstring)
services/guilds/territories.py:109:8: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
************* Module backend.services.karma
services/karma/__init__.py:1:0: C0114: Missing module docstring (missing-module-docstring)
************* Module backend.services.karma.events
services/karma/events.py:1:0: C0114: Missing module docstring (missing-module-docstring)
services/karma/events.py:12:4: R0917: Too many positional arguments (6/5) (too-many-positional-arguments)
services/karma/events.py:4:0: C0411: standard import "uuid" should be placed before local import "core.database.get_database" (wrong-import-order)
************* Module backend.services.karma.calculator
services/karma/calculator.py:96:0: C0304: Final newline missing (missing-final-newline)
services/karma/calculator.py:1:0: C0114: Missing module docstring (missing-module-docstring)
services/karma/calculator.py:26:8: R1705: Unnecessary "elif" after "return", remove the leading "el" from "elif" (no-else-return)
************* Module backend.services.crafting
services/crafting/__init__.py:1:0: C0114: Missing module docstring (missing-module-docstring)
************* Module backend.services.crafting.recipes
services/crafting/recipes.py:1:0: C0114: Missing module docstring (missing-module-docstring)
************* Module backend.services.crafting.crafter
services/crafting/crafter.py:1:0: C0114: Missing module docstring (missing-module-docstring)
services/crafting/crafter.py:107:12: W0612: Unused variable 'i' (unused-variable)
services/crafting/crafter.py:7:0: C0411: standard import "uuid" should be placed before local imports "models.player.player.Player", "models.economy.transaction.Transaction", "recipes.RecipeManager" (wrong-import-order)
************* Module backend.services.ai.cost_optimizer
services/ai/cost_optimizer.py:30:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/ai/cost_optimizer.py:40:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/ai/cost_optimizer.py:51:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/ai/cost_optimizer.py:69:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/ai/cost_optimizer.py:79:8: R1705: Unnecessary "elif" after "return", remove the leading "el" from "elif" (no-else-return)
************* Module backend.services.ai.cost_tracker
services/ai/cost_tracker.py:92:0: C0301: Line too long (130/120) (line-too-long)
services/ai/cost_tracker.py:34:4: R0917: Too many positional arguments (6/5) (too-many-positional-arguments)
services/ai/cost_tracker.py:85:12: R1704: Redefining argument with the local name 'service' (redefined-argument-from-local)
************* Module backend.services.ai.cache_strategies
services/ai/cache_strategies.py:12:27: W0613: Unused argument 'data' (unused-argument)
services/ai/cache_strategies.py:16:22: W0613: Unused argument 'data' (unused-argument)
************* Module backend.services.ai.client
services/ai/client.py:34:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/ai/client.py:36:4: R0917: Too many positional arguments (6/5) (too-many-positional-arguments)
services/ai/client.py:74:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/ai/client.py:77:29: W0613: Unused argument 'messages' (unused-argument)
************* Module backend.services.ai.cache_manager
services/ai/cache_manager.py:35:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/ai/cache_manager.py:53:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/ai/cache_manager.py:56:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/ai/cache_manager.py:60:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/ai/cache_manager.py:85:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/ai/cache_manager.py:88:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/ai/cache_manager.py:92:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/ai/cache_manager.py:106:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/ai/cache_manager.py:109:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/ai/cache_manager.py:113:41: C0201: Consider iterating the dictionary directly instead of calling .keys() (consider-iterating-dictionary)
************* Module backend.services.ai.base
services/ai/base.py:20:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/ai/base.py:25:8: W0107: Unnecessary pass statement (unnecessary-pass)
services/ai/base.py:31:0: W0613: Unused argument 'args' (unused-argument)
services/ai/base.py:31:0: W0613: Unused argument 'kwargs' (unused-argument)
************* Module backend.services.ai.karma_arbiter.arbiter
services/ai/karma_arbiter/arbiter.py:22:4: R0917: Too many positional arguments (6/5) (too-many-positional-arguments)
services/ai/karma_arbiter/arbiter.py:64:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/ai/karma_arbiter/arbiter.py:95:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/ai/karma_arbiter/arbiter.py:96:31: W0212: Access to a protected member _fallback_evaluation of a client class (protected-access)
************* Module backend.services.ai.karma_arbiter.evaluator
services/ai/karma_arbiter/evaluator.py:35:0: C0301: Line too long (137/120) (line-too-long)
services/ai/karma_arbiter/evaluator.py:55:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/ai/karma_arbiter/evaluator.py:77:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/ai/karma_arbiter/evaluator.py:153:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
************* Module backend.services.ai.companion.companion
services/ai/companion/companion.py:47:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/ai/companion/companion.py:75:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
************* Module backend.services.ai.companion.dialogue
services/ai/companion/dialogue.py:21:4: R0917: Too many positional arguments (6/5) (too-many-positional-arguments)
services/ai/companion/dialogue.py:72:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/ai/companion/dialogue.py:75:51: W0613: Unused argument 'message' (unused-argument)
************* Module backend.services.ai.companion.personality
services/ai/companion/personality.py:42:8: R1705: Unnecessary "elif" after "return", remove the leading "el" from "elif" (no-else-return)
************* Module backend.services.ai.companion.schemas
services/ai/companion/schemas.py:5:0: C0411: standard import "datetime.datetime" should be placed before third party import "pydantic.BaseModel" (wrong-import-order)
************* Module backend.services.ai.companion.advice
services/ai/companion/advice.py:73:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/ai/companion/advice.py:84:49: W0613: Unused argument 'situation' (unused-argument)
************* Module backend.services.ai.oracle.schemas
services/ai/oracle/schemas.py:5:0: C0411: standard import "datetime.datetime" should be placed before third party import "pydantic.BaseModel" (wrong-import-order)
************* Module backend.services.ai.oracle.generator
services/ai/oracle/generator.py:61:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/ai/oracle/generator.py:132:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/ai/oracle/generator.py:181:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/ai/oracle/generator.py:205:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/ai/oracle/generator.py:208:33: W0613: Unused argument 'request' (unused-argument)
************* Module backend.services.ai.oracle.oracle
services/ai/oracle/oracle.py:44:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/ai/oracle/oracle.py:121:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
************* Module backend.services.ai.architect.events
services/ai/architect/events.py:19:0: C0301: Line too long (374/120) (line-too-long)
services/ai/architect/events.py:35:0: C0301: Line too long (312/120) (line-too-long)
services/ai/architect/events.py:49:0: C0301: Line too long (340/120) (line-too-long)
services/ai/architect/events.py:63:0: C0301: Line too long (375/120) (line-too-long)
services/ai/architect/events.py:80:0: C0301: Line too long (386/120) (line-too-long)
services/ai/architect/events.py:94:0: C0301: Line too long (350/120) (line-too-long)
services/ai/architect/events.py:110:0: C0301: Line too long (327/120) (line-too-long)
services/ai/architect/events.py:126:0: C0301: Line too long (397/120) (line-too-long)
services/ai/architect/events.py:145:0: C0301: Line too long (315/120) (line-too-long)
services/ai/architect/events.py:159:0: C0301: Line too long (365/120) (line-too-long)
services/ai/architect/events.py:175:0: C0301: Line too long (423/120) (line-too-long)
services/ai/architect/events.py:191:0: C0301: Line too long (386/120) (line-too-long)
services/ai/architect/events.py:251:8: R1705: Unnecessary "elif" after "return", remove the leading "el" from "elif" (no-else-return)
services/ai/architect/events.py:249:4: R0911: Too many return statements (7/6) (too-many-return-statements)
************* Module backend.services.ai.architect.triggers
services/ai/architect/triggers.py:317:0: C0301: Line too long (122/120) (line-too-long)
services/ai/architect/triggers.py:15:0: E0611: No name 'get_ai_client' in module 'backend.services.ai.client' (no-name-in-module)
services/ai/architect/triggers.py:92:12: W0612: Unused variable 'name' (unused-variable)
services/ai/architect/triggers.py:141:8: W0613: Unused argument 'negative_actions' (unused-argument)
services/ai/architect/triggers.py:248:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/ai/architect/triggers.py:256:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
************* Module backend.services.ai.architect.architect
services/ai/architect/architect.py:273:0: C0301: Line too long (180/120) (line-too-long)
services/ai/architect/architect.py:299:0: C0301: Line too long (151/120) (line-too-long)
services/ai/architect/architect.py:20:0: E0611: No name 'get_ai_client' in module 'backend.services.ai.client' (no-name-in-module)
services/ai/architect/architect.py:21:0: E0611: No name 'CacheManager' in module 'backend.services.ai.cache_manager' (no-name-in-module)
services/ai/architect/architect.py:52:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/ai/architect/architect.py:151:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/ai/architect/architect.py:159:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/ai/architect/architect.py:169:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/ai/architect/architect.py:217:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/ai/architect/architect.py:222:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/ai/architect/architect.py:318:4: W0221: Number of parameters was 3 in 'BaseAIService.process' and is now 2 in overriding 'Architect.process' method (arguments-differ)
services/ai/architect/architect.py:318:4: W0221: Variadics removed in overriding 'Architect.process' method (arguments-differ)
************* Module backend.services.combat.turn_manager
services/combat/turn_manager.py:124:36: W0613: Unused argument 'battle_id' (unused-argument)
************* Module backend.services.combat.pvp_manager
services/combat/pvp_manager.py:1:0: C0114: Missing module docstring (missing-module-docstring)
services/combat/pvp_manager.py:37:28: W0613: Unused argument 'attacker' (unused-argument)
************* Module backend.services.combat.engine
services/combat/engine.py:185:4: R0917: Too many positional arguments (6/5) (too-many-positional-arguments)
services/combat/engine.py:226:8: E1101: Instance of 'FieldInfo' has no 'append' member (no-member)
services/combat/engine.py:293:8: W0613: Unused argument 'battle' (unused-argument)
services/combat/engine.py:294:8: W0613: Unused argument 'ability_id' (unused-argument)
services/combat/engine.py:295:8: W0613: Unused argument 'target_id' (unused-argument)
services/combat/engine.py:354:8: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
************* Module backend.services.combat.matchmaking
services/combat/matchmaking.py:1:0: C0114: Missing module docstring (missing-module-docstring)
************* Module backend.services.combat.calculator
services/combat/calculator.py:117:0: C0325: Unnecessary parens after '=' keyword (superfluous-parens)
services/combat/calculator.py:104:4: R0917: Too many positional arguments (6/5) (too-many-positional-arguments)
services/combat/calculator.py:156:8: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
services/combat/calculator.py:166:8: R1705: Unnecessary "elif" after "return", remove the leading "el" from "elif" (no-else-return)
************* Module backend.services.actions.handler
services/actions/handler.py:1:0: C0114: Missing module docstring (missing-module-docstring)
services/actions/handler.py:51:30: E1101: Instance of 'KarmaCalculator' has no 'calculate_simple' member (no-member)
services/actions/handler.py:8:0: C0411: standard import "uuid" should be placed before local imports "player.traits.TraitsService", "karma.calculator.KarmaCalculator", "validator.ActionValidator", "processor.ActionProcessor", "core.database.get_database" (wrong-import-order)
************* Module backend.services.actions.processor
services/actions/processor.py:43:0: C0301: Line too long (121/120) (line-too-long)
services/actions/processor.py:1:0: C0114: Missing module docstring (missing-module-docstring)
services/actions/processor.py:16:8: R1705: Unnecessary "elif" after "return", remove the leading "el" from "elif" (no-else-return)
services/actions/processor.py:38:8: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
services/actions/processor.py:29:49: W0613: Unused argument 'params' (unused-argument)
services/actions/processor.py:55:34: W0613: Unused argument 'actor' (unused-argument)
services/actions/processor.py:55:49: W0613: Unused argument 'params' (unused-argument)
services/actions/processor.py:76:8: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
services/actions/processor.py:66:50: W0613: Unused argument 'params' (unused-argument)
services/actions/processor.py:93:36: W0613: Unused argument 'actor' (unused-argument)
services/actions/processor.py:104:35: W0613: Unused argument 'actor' (unused-argument)
************* Module backend.services.actions.validator
services/actions/validator.py:1:0: C0114: Missing module docstring (missing-module-docstring)
services/actions/validator.py:24:8: R1705: Unnecessary "elif" after "return", remove the leading "el" from "elif" (no-else-return)
services/actions/validator.py:7:4: R0911: Too many return statements (7/6) (too-many-return-statements)
services/actions/validator.py:40:53: W0613: Unused argument 'action_type' (unused-argument)
services/actions/validator.py:50:44: W0613: Unused argument 'params' (unused-argument)
services/actions/validator.py:61:44: W0613: Unused argument 'params' (unused-argument)
services/actions/validator.py:72:45: W0613: Unused argument 'params' (unused-argument)
services/actions/validator.py:101:30: W0613: Unused argument 'actor' (unused-argument)
************* Module backend.services.actions.cooldown_manager
services/actions/cooldown_manager.py:6:0: W0611: Unused ObjectId imported from bson (unused-import)
************* Module backend.services.world.world_state_service
services/world/world_state_service.py:6:0: E0611: No name 'WorldState' in module 'backend.models.world.world_state' (no-name-in-module)
services/world/world_state_service.py:6:0: E0611: No name 'GlobalKarma' in module 'backend.models.world.world_state' (no-name-in-module)
services/world/world_state_service.py:80:8: R1705: Unnecessary "elif" after "return", remove the leading "el" from "elif" (no-else-return)
************* Module backend.services.world.state_manager
services/world/state_manager.py:24:8: C0103: Attribute name "CACHE_TTL" doesn't conform to snake_case naming style (invalid-name)
services/world/state_manager.py:41:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/world/state_manager.py:241:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/world/state_manager.py:249:40: W0613: Unused argument 'player_id' (unused-argument)
************* Module backend.services.world.regional_events
services/world/regional_events.py:6:0: C0411: standard import "uuid" should be placed before first party import "backend.core.database.db"  (wrong-import-order)
services/world/regional_events.py:7:0: C0411: standard import "random" should be placed before first party import "backend.core.database.db"  (wrong-import-order)
************* Module backend.services.world.event_manager
services/world/event_manager.py:49:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/world/event_manager.py:79:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/world/event_manager.py:82:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/world/event_manager.py:101:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/world/event_manager.py:134:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/world/event_manager.py:154:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/world/event_manager.py:178:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/world/event_manager.py:211:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/world/event_manager.py:342:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/world/event_manager.py:367:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
************* Module backend.services.world.collective_karma
services/world/collective_karma.py:149:8: R1705: Unnecessary "elif" after "return", remove the leading "el" from "elif" (no-else-return)
services/world/collective_karma.py:117:36: W0613: Unused argument 'hours' (unused-argument)
************* Module backend.services.world.events
services/world/events.py:244:15: R1716: Simplify chained comparison between the operands (chained-comparison)
services/world/events.py:249:17: R1716: Simplify chained comparison between the operands (chained-comparison)
services/world/events.py:7:0: C0411: standard import "random" should be placed before first party imports "backend.core.database.db", "backend.services.ai.architect.architect.Architect"  (wrong-import-order)
services/world/events.py:8:0: C0411: standard import "uuid" should be placed before first party imports "backend.core.database.db", "backend.services.ai.architect.architect.Architect"  (wrong-import-order)
************* Module backend.services.world.event_service
services/world/event_service.py:34:4: R0917: Too many positional arguments (6/5) (too-many-positional-arguments)
************* Module backend.services.world.collective_consequences
services/world/collective_consequences.py:243:44: W0613: Unused argument 'limit' (unused-argument)
************* Module backend.services.world.architect
services/world/architect.py:53:8: W0613: Unused argument 'karma_trend' (unused-argument)
services/world/architect.py:157:8: R1705: Unnecessary "elif" after "return", remove the leading "el" from "elif" (no-else-return)
services/world/architect.py:155:34: W0613: Unused argument 'event_type' (unused-argument)
************* Module backend.services.world.event_effects
services/world/event_effects.py:39:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/world/event_effects.py:107:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
************* Module backend.services.world.karma_tracker
services/world/karma_tracker.py:229:8: R1705: Unnecessary "elif" after "return", remove the leading "el" from "elif" (no-else-return)
services/world/karma_tracker.py:253:17: R1716: Simplify chained comparison between the operands (chained-comparison)
services/world/karma_tracker.py:254:17: R1716: Simplify chained comparison between the operands (chained-comparison)
************* Module backend.services.world.territory_manager
services/world/territory_manager.py:119:4: R0917: Too many positional arguments (6/5) (too-many-positional-arguments)
services/world/territory_manager.py:157:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/world/territory_manager.py:259:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/world/territory_manager.py:303:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
************* Module backend.services.investments
services/investments/__init__.py:1:0: C0114: Missing module docstring (missing-module-docstring)
************* Module backend.services.investments.opportunities
services/investments/opportunities.py:1:0: C0114: Missing module docstring (missing-module-docstring)
************* Module backend.services.investments.portfolio
services/investments/portfolio.py:1:0: C0114: Missing module docstring (missing-module-docstring)
************* Module backend.models.achievements
models/achievements.py:1:0: C0114: Missing module docstring (missing-module-docstring)
models/achievements.py:6:0: C0115: Missing class docstring (missing-class-docstring)
models/achievements.py:18:0: C0115: Missing class docstring (missing-class-docstring)
models/achievements.py:77:59: E1133: Non-iterable value self.unlocked_achievements is used in an iterating context (not-an-iterable)
models/achievements.py:87:8: E1101: Instance of 'FieldInfo' has no 'append' member (no-member)
models/achievements.py:89:8: E1101: Instance of 'FieldInfo' has no 'insert' member (no-member)
models/achievements.py:91:12: E1101: Instance of 'FieldInfo' has no 'pop' member (no-member)
models/achievements.py:2:0: C0411: standard import "typing.List" should be placed before third party import "pydantic.BaseModel" (wrong-import-order)
models/achievements.py:3:0: C0411: standard import "datetime.datetime" should be placed before third party import "pydantic.BaseModel" (wrong-import-order)
models/achievements.py:4:0: C0411: standard import "enum.Enum" should be placed before third party import "pydantic.BaseModel" (wrong-import-order)
************* Module backend.models.base
models/base.py:1:0: C0114: Missing module docstring (missing-module-docstring)
models/base.py:11:4: C0115: Missing class docstring (missing-class-docstring)
models/base.py:2:0: C0411: standard import "datetime.datetime" should be placed before third party import "pydantic.BaseModel" (wrong-import-order)
models/base.py:3:0: C0411: standard import "uuid" should be placed before third party import "pydantic.BaseModel" (wrong-import-order)
************* Module backend.models.quests.objective
models/quests/objective.py:49:4: C0115: Missing class docstring (missing-class-docstring)
models/quests/objective.py:93:4: C0115: Missing class docstring (missing-class-docstring)
************* Module backend.models.quests.campaign
models/quests/campaign.py:56:4: C0115: Missing class docstring (missing-class-docstring)
models/quests/campaign.py:84:4: C0115: Missing class docstring (missing-class-docstring)
************* Module backend.models.quests.quest
models/quests/quest.py:80:4: C0115: Missing class docstring (missing-class-docstring)
************* Module backend.models.social
models/social/__init__.py:1:0: C0114: Missing module docstring (missing-module-docstring)
************* Module backend.models.social.relationship
models/social/relationship.py:1:0: C0114: Missing module docstring (missing-module-docstring)
models/social/relationship.py:8:0: C0115: Missing class docstring (missing-class-docstring)
models/social/relationship.py:17:0: C0115: Missing class docstring (missing-class-docstring)
models/social/relationship.py:30:0: C0115: Missing class docstring (missing-class-docstring)
models/social/relationship.py:40:4: C0115: Missing class docstring (missing-class-docstring)
models/social/relationship.py:49:0: C0115: Missing class docstring (missing-class-docstring)
models/social/relationship.py:62:4: C0115: Missing class docstring (missing-class-docstring)
models/social/relationship.py:72:0: C0115: Missing class docstring (missing-class-docstring)
models/social/relationship.py:88:4: C0115: Missing class docstring (missing-class-docstring)
models/social/relationship.py:4:0: C0411: standard import "enum.Enum" should be placed before third party import "pydantic.BaseModel" (wrong-import-order)
models/social/relationship.py:5:0: C0411: standard import "uuid" should be placed before third party import "pydantic.BaseModel" (wrong-import-order)
************* Module backend.models.seasonal.season
models/seasonal/season.py:62:4: C0115: Missing class docstring (missing-class-docstring)
models/seasonal/season.py:102:4: C0115: Missing class docstring (missing-class-docstring)
models/seasonal/season.py:142:4: C0115: Missing class docstring (missing-class-docstring)
models/seasonal/season.py:4:0: C0411: standard import "typing.List" should be placed before third party import "pydantic.BaseModel" (wrong-import-order)
models/seasonal/season.py:5:0: C0411: standard import "datetime.datetime" should be placed before third party import "pydantic.BaseModel" (wrong-import-order)
models/seasonal/season.py:6:0: C0411: standard import "enum.Enum" should be placed before third party import "pydantic.BaseModel" (wrong-import-order)
************* Module backend.models.seasonal.battle_pass
models/seasonal/battle_pass.py:32:4: C0115: Missing class docstring (missing-class-docstring)
models/seasonal/battle_pass.py:69:4: C0115: Missing class docstring (missing-class-docstring)
models/seasonal/battle_pass.py:106:4: C0115: Missing class docstring (missing-class-docstring)
models/seasonal/battle_pass.py:123:4: C0115: Missing class docstring (missing-class-docstring)
models/seasonal/battle_pass.py:4:0: C0411: standard import "typing.List" should be placed before third party import "pydantic.BaseModel" (wrong-import-order)
models/seasonal/battle_pass.py:5:0: C0411: standard import "datetime.datetime" should be placed before third party import "pydantic.BaseModel" (wrong-import-order)
models/seasonal/battle_pass.py:6:0: C0411: standard import "enum.Enum" should be placed before third party import "pydantic.BaseModel" (wrong-import-order)
************* Module backend.models.robots.robot
models/robots/robot.py:40:4: C0115: Missing class docstring (missing-class-docstring)
models/robots/robot.py:76:4: C0115: Missing class docstring (missing-class-docstring)
models/robots/robot.py:6:0: C0411: standard import "uuid" should be placed before third party import "pydantic.BaseModel" (wrong-import-order)
************* Module backend.models.player.player
models/player/player.py:1:0: C0114: Missing module docstring (missing-module-docstring)
models/player/player.py:2:0: C0411: standard import "typing.Dict" should be placed before third party import "pydantic.BaseModel" (wrong-import-order)
models/player/player.py:3:0: C0411: standard import "datetime.datetime" should be placed before third party import "pydantic.BaseModel" (wrong-import-order)
************* Module backend.models.player.appearance
models/player/appearance.py:40:0: C0304: Final newline missing (missing-final-newline)
models/player/appearance.py:1:0: C0114: Missing module docstring (missing-module-docstring)
models/player/appearance.py:2:0: C0411: standard import "typing.List" should be placed before third party import "pydantic.BaseModel" (wrong-import-order)
************* Module backend.models.player.superpowers
models/player/superpowers.py:1:0: C0114: Missing module docstring (missing-module-docstring)
models/player/superpowers.py:6:0: C0115: Missing class docstring (missing-class-docstring)
models/player/superpowers.py:58:47: E1133: Non-iterable value self.unlocked_powers is used in an iterating context (not-an-iterable)
models/player/superpowers.py:65:8: E1101: Instance of 'FieldInfo' has no 'append' member (no-member)
models/player/superpowers.py:73:23: E1135: Value 'self.equipped_powers' doesn't support membership test (unsupported-membership-test)
models/player/superpowers.py:75:51: E1133: Non-iterable value self.unlocked_powers is used in an iterating context (not-an-iterable)
models/player/superpowers.py:78:8: E1101: Instance of 'FieldInfo' has no 'append' member (no-member)
models/player/superpowers.py:2:0: C0411: standard import "typing.List" should be placed before third party import "pydantic.BaseModel" (wrong-import-order)
models/player/superpowers.py:3:0: C0411: standard import "datetime.datetime" should be placed before third party import "pydantic.BaseModel" (wrong-import-order)
models/player/superpowers.py:4:0: C0411: standard import "enum.Enum" should be placed before third party import "pydantic.BaseModel" (wrong-import-order)
************* Module backend.models.player.prestige
models/player/prestige.py:1:0: C0114: Missing module docstring (missing-module-docstring)
models/player/prestige.py:50:8: E1101: Instance of 'FieldInfo' has no 'append' member (no-member)
models/player/prestige.py:2:0: C0411: standard import "typing.List" should be placed before third party import "pydantic.BaseModel" (wrong-import-order)
models/player/prestige.py:3:0: C0411: standard import "datetime.datetime" should be placed before third party import "pydantic.BaseModel" (wrong-import-order)
************* Module backend.models.player.legacy
models/player/legacy.py:1:0: C0114: Missing module docstring (missing-module-docstring)
models/player/legacy.py:62:46: W0613: Unused argument 'source' (unused-argument)
models/player/legacy.py:81:57: E1133: Non-iterable value self.earned_titles is used in an iterating context (not-an-iterable)
models/player/legacy.py:82:12: E1101: Instance of 'FieldInfo' has no 'append' member (no-member)
models/player/legacy.py:2:0: C0411: standard import "typing.List" should be placed before third party import "pydantic.BaseModel" (wrong-import-order)
models/player/legacy.py:3:0: C0411: standard import "datetime.datetime" should be placed before third party import "pydantic.BaseModel" (wrong-import-order)
************* Module backend.models.player.skill_trees
models/player/skill_trees.py:1:0: C0114: Missing module docstring (missing-module-docstring)
models/player/skill_trees.py:30:20: E1133: Non-iterable value self.nodes is used in an iterating context (not-an-iterable)
models/player/skill_trees.py:64:29: E1135: Value 'self.skill_trees' doesn't support membership test (unsupported-membership-test)
models/player/skill_trees.py:67:11: E1136: Value 'self.skill_trees' is unsubscriptable (unsubscriptable-object)
models/player/skill_trees.py:2:0: C0411: standard import "typing.Dict" should be placed before third party import "pydantic.BaseModel" (wrong-import-order)
models/player/skill_trees.py:3:0: C0411: standard import "datetime.datetime" should be placed before third party import "pydantic.BaseModel" (wrong-import-order)
************* Module backend.models.player.inventory
models/player/inventory.py:22:4: C0115: Missing class docstring (missing-class-docstring)
models/player/inventory.py:51:4: C0115: Missing class docstring (missing-class-docstring)
models/player/inventory.py:78:4: C0115: Missing class docstring (missing-class-docstring)
models/player/inventory.py:100:4: C0115: Missing class docstring (missing-class-docstring)
************* Module backend.models.real_estate
models/real_estate/__init__.py:1:0: C0114: Missing module docstring (missing-module-docstring)
************* Module backend.models.real_estate.rental
models/real_estate/rental.py:1:0: C0114: Missing module docstring (missing-module-docstring)
models/real_estate/rental.py:28:4: C0115: Missing class docstring (missing-class-docstring)
models/real_estate/rental.py:2:0: C0411: standard import "datetime.datetime" should be placed before third party import "pydantic.BaseModel" (wrong-import-order)
models/real_estate/rental.py:3:0: C0411: standard import "typing.Optional" should be placed before third party import "pydantic.BaseModel" (wrong-import-order)
************* Module backend.models.real_estate.property
models/real_estate/property.py:1:0: C0114: Missing module docstring (missing-module-docstring)
models/real_estate/property.py:45:4: C0115: Missing class docstring (missing-class-docstring)
models/real_estate/property.py:2:0: C0411: standard import "typing.Optional" should be placed before third party import "pydantic.BaseModel" (wrong-import-order)
models/real_estate/property.py:3:0: C0411: standard import "datetime.datetime" should be placed before third party import "pydantic.BaseModel" (wrong-import-order)
************* Module backend.models.economy.transaction
models/economy/transaction.py:23:4: C0115: Missing class docstring (missing-class-docstring)
models/economy/transaction.py:59:4: C0115: Missing class docstring (missing-class-docstring)
models/economy/transaction.py:6:0: C0411: standard import "uuid" should be placed before third party import "pydantic.BaseModel" (wrong-import-order)
************* Module backend.models.tournaments.tournament
models/tournaments/tournament.py:48:4: C0115: Missing class docstring (missing-class-docstring)
models/tournaments/tournament.py:105:4: C0115: Missing class docstring (missing-class-docstring)
models/tournaments/tournament.py:121:4: C0115: Missing class docstring (missing-class-docstring)
models/tournaments/tournament.py:4:0: C0411: standard import "typing.List" should be placed before third party import "pydantic.BaseModel" (wrong-import-order)
models/tournaments/tournament.py:5:0: C0411: standard import "datetime.datetime" should be placed before third party import "pydantic.BaseModel" (wrong-import-order)
models/tournaments/tournament.py:6:0: C0411: standard import "enum.Enum" should be placed before third party import "pydantic.BaseModel" (wrong-import-order)
************* Module backend.models.guilds
models/guilds/__init__.py:1:0: C0114: Missing module docstring (missing-module-docstring)
************* Module backend.models.guilds.guild
models/guilds/guild.py:1:0: C0114: Missing module docstring (missing-module-docstring)
models/guilds/guild.py:8:0: C0115: Missing class docstring (missing-class-docstring)
models/guilds/guild.py:16:0: C0115: Missing class docstring (missing-class-docstring)
models/guilds/guild.py:23:0: C0115: Missing class docstring (missing-class-docstring)
models/guilds/guild.py:65:4: C0115: Missing class docstring (missing-class-docstring)
models/guilds/guild.py:4:0: C0411: standard import "enum.Enum" should be placed before third party import "pydantic.BaseModel" (wrong-import-order)
models/guilds/guild.py:5:0: C0411: standard import "uuid" should be placed before third party import "pydantic.BaseModel" (wrong-import-order)
************* Module backend.models.guilds.territory
models/guilds/territory.py:1:0: C0114: Missing module docstring (missing-module-docstring)
models/guilds/territory.py:6:0: C0115: Missing class docstring (missing-class-docstring)
models/guilds/territory.py:28:4: C0115: Missing class docstring (missing-class-docstring)
************* Module backend.models.guilds.war
models/guilds/war.py:1:0: C0114: Missing module docstring (missing-module-docstring)
models/guilds/war.py:8:0: C0115: Missing class docstring (missing-class-docstring)
models/guilds/war.py:14:0: C0115: Missing class docstring (missing-class-docstring)
models/guilds/war.py:40:4: C0115: Missing class docstring (missing-class-docstring)
models/guilds/war.py:4:0: C0411: standard import "enum.Enum" should be placed before third party import "pydantic.BaseModel" (wrong-import-order)
models/guilds/war.py:5:0: C0411: standard import "uuid" should be placed before third party import "pydantic.BaseModel" (wrong-import-order)
************* Module backend.models.karma.world_state
models/karma/world_state.py:52:49: W0108: Lambda may not be necessary (unnecessary-lambda)
models/karma/world_state.py:69:4: C0115: Missing class docstring (missing-class-docstring)
models/karma/world_state.py:6:0: C0411: standard import "enum.Enum" should be placed before third party import "pydantic.BaseModel" (wrong-import-order)
************* Module backend.models.karma.event
models/karma/event.py:43:0: C0304: Final newline missing (missing-final-newline)
models/karma/event.py:1:0: C0114: Missing module docstring (missing-module-docstring)
models/karma/event.py:29:4: C0115: Missing class docstring (missing-class-docstring)
models/karma/event.py:2:0: C0411: standard import "datetime.datetime" should be placed before third party import "pydantic.Field" (wrong-import-order)
models/karma/event.py:3:0: C0411: standard import "typing.Dict" should be placed before third party import "pydantic.Field" (wrong-import-order)
************* Module backend.models.crafting
models/crafting/__init__.py:1:0: C0114: Missing module docstring (missing-module-docstring)
************* Module backend.models.crafting.crafting_history
models/crafting/crafting_history.py:1:0: C0114: Missing module docstring (missing-module-docstring)
models/crafting/crafting_history.py:29:4: C0115: Missing class docstring (missing-class-docstring)
models/crafting/crafting_history.py:2:0: C0411: standard import "datetime.datetime" should be placed before third party import "pydantic.BaseModel" (wrong-import-order)
models/crafting/crafting_history.py:3:0: C0411: standard import "typing.Optional" should be placed before third party import "pydantic.BaseModel" (wrong-import-order)
************* Module backend.models.crafting.recipe
models/crafting/recipe.py:1:0: C0114: Missing module docstring (missing-module-docstring)
models/crafting/recipe.py:48:4: C0115: Missing class docstring (missing-class-docstring)
************* Module backend.models.ai.companion
models/ai/companion.py:20:4: C0115: Missing class docstring (missing-class-docstring)
************* Module backend.models.ai.evaluation
models/ai/evaluation.py:25:4: C0115: Missing class docstring (missing-class-docstring)
************* Module backend.models.ai.karma_event
models/ai/karma_event.py:22:4: C0115: Missing class docstring (missing-class-docstring)
************* Module backend.models.combat.stats
models/combat/stats.py:64:4: C0115: Missing class docstring (missing-class-docstring)
************* Module backend.models.combat.battle
models/combat/battle.py:60:4: C0115: Missing class docstring (missing-class-docstring)
models/combat/battle.py:98:4: C0115: Missing class docstring (missing-class-docstring)
models/combat/battle.py:6:0: C0411: standard import "uuid" should be placed before third party import "pydantic.BaseModel" (wrong-import-order)
************* Module backend.models.combat.leaderboard
models/combat/leaderboard.py:1:0: C0114: Missing module docstring (missing-module-docstring)
models/combat/leaderboard.py:26:4: C0115: Missing class docstring (missing-class-docstring)
models/combat/leaderboard.py:2:0: C0411: standard import "typing.List" should be placed before third party import "pydantic.BaseModel" (wrong-import-order)
models/combat/leaderboard.py:3:0: C0411: standard import "datetime.datetime" should be placed before third party import "pydantic.BaseModel" (wrong-import-order)
************* Module backend.models.actions.cooldown
models/actions/cooldown.py:19:4: C0115: Missing class docstring (missing-class-docstring)
models/actions/cooldown.py:42:4: C0115: Missing class docstring (missing-class-docstring)
************* Module backend.models.actions.history
models/actions/history.py:29:0: C0304: Final newline missing (missing-final-newline)
models/actions/history.py:1:0: C0114: Missing module docstring (missing-module-docstring)
models/actions/history.py:2:0: C0411: standard import "datetime.datetime" should be placed before third party import "pydantic.Field" (wrong-import-order)
models/actions/history.py:3:0: C0411: standard import "typing.Dict" should be placed before third party import "pydantic.Field" (wrong-import-order)
************* Module backend.models.actions.action
models/actions/action.py:1:0: C0114: Missing module docstring (missing-module-docstring)
models/actions/action.py:2:0: C0411: standard import "datetime.datetime" should be placed before third party import "pydantic.Field" (wrong-import-order)
models/actions/action.py:3:0: C0411: standard import "typing.Dict" should be placed before third party import "pydantic.Field" (wrong-import-order)
************* Module backend.models.world.territory
models/world/territory.py:208:4: C0115: Missing class docstring (missing-class-docstring)
models/world/territory.py:6:0: C0411: standard import "enum.Enum" should be placed before third party import "pydantic.BaseModel" (wrong-import-order)
************* Module backend.models.world.world_state
models/world/world_state.py:98:4: C0115: Missing class docstring (missing-class-docstring)
************* Module backend.models.world.world_event
models/world/world_event.py:92:4: C0115: Missing class docstring (missing-class-docstring)
models/world/world_event.py:6:0: C0411: standard import "enum.Enum" should be placed before third party import "pydantic.BaseModel" (wrong-import-order)
************* Module backend.models.world.karma_event
models/world/karma_event.py:141:4: C0115: Missing class docstring (missing-class-docstring)
models/world/karma_event.py:6:0: C0411: standard import "enum.Enum" should be placed before third party import "pydantic.BaseModel" (wrong-import-order)
************* Module backend.models.investments
models/investments/__init__.py:1:0: C0114: Missing module docstring (missing-module-docstring)
************* Module backend.models.investments.portfolio
models/investments/portfolio.py:1:0: C0114: Missing module docstring (missing-module-docstring)
models/investments/portfolio.py:25:4: C0115: Missing class docstring (missing-class-docstring)
models/investments/portfolio.py:46:4: C0115: Missing class docstring (missing-class-docstring)
models/investments/portfolio.py:2:0: C0411: standard import "typing.List" should be placed before third party import "pydantic.BaseModel" (wrong-import-order)
models/investments/portfolio.py:3:0: C0411: standard import "datetime.datetime" should be placed before third party import "pydantic.BaseModel" (wrong-import-order)
************* Module backend.models.investments.investment
models/investments/investment.py:1:0: C0114: Missing module docstring (missing-module-docstring)
models/investments/investment.py:31:4: C0115: Missing class docstring (missing-class-docstring)
models/investments/investment.py:2:0: C0411: standard import "datetime.datetime" should be placed before third party import "pydantic.BaseModel" (wrong-import-order)

------------------------------------------------------------------
Your code has been rated at 8.42/10 (previous run: 8.42/10, +0.00)

