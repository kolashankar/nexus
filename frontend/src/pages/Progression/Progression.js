import { jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { useState } from 'react';
import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Progress } from '@/components/ui/progress';
import { useProgression } from '@/hooks/useProgression';
import { Trophy, Zap, Star, Sparkles } from 'lucide-react';
export const Progression = () => {
    const { progression, loading, unlockSkillNode, activateSuperpower, prestige } = useProgression();
    const [selectedTrait, setSelectedTrait] = useState('empathy');
    if (loading || !progression) {
        return (_jsx("div", { className: "flex items-center justify-center h-screen", children: _jsxs("div", { className: "text-center", children: [_jsx("div", { className: "animate-spin rounded-full h-12 w-12 border-b-2 border-purple-500 mx-auto mb-4" }), _jsx("p", { children: "Loading progression..." })] }) }));
    }
    return (_jsxs("div", { className: "container mx-auto p-6 space-y-6", children: [_jsxs("div", { children: [_jsx("h1", { className: "text-3xl font-bold mb-2", children: "Progression" }), _jsx("p", { className: "text-gray-600", children: "Track your skills, powers, and achievements" })] }), _jsxs("div", { className: "grid grid-cols-1 md:grid-cols-4 gap-4", children: [_jsx(Card, { children: _jsxs(CardContent, { className: "pt-6", children: [_jsxs("div", { className: "flex items-center justify-between", children: [_jsxs("div", { children: [_jsx("p", { className: "text-sm text-gray-600", children: "Level" }), _jsx("p", { className: "text-3xl font-bold", children: progression.level })] }), _jsx(Star, { className: "w-10 h-10 text-blue-500" })] }), _jsxs("div", { className: "mt-4", children: [_jsx(Progress, { value: (progression.xp / progression.xpForNext) * 100 }), _jsxs("p", { className: "text-xs text-gray-500 mt-1", children: [progression.xp.toLocaleString(), " / ", progression.xpForNext.toLocaleString(), " XP"] })] })] }) }), _jsx(Card, { children: _jsx(CardContent, { className: "pt-6", children: _jsxs("div", { className: "flex items-center justify-between", children: [_jsxs("div", { children: [_jsx("p", { className: "text-sm text-gray-600", children: "Prestige" }), _jsx("p", { className: "text-3xl font-bold", children: progression.prestigeLevel })] }), _jsx(Sparkles, { className: "w-10 h-10 text-purple-500" })] }) }) }), _jsx(Card, { children: _jsx(CardContent, { className: "pt-6", children: _jsxs("div", { className: "flex items-center justify-between", children: [_jsxs("div", { children: [_jsx("p", { className: "text-sm text-gray-600", children: "Superpowers" }), _jsx("p", { className: "text-3xl font-bold", children: progression.superpowersUnlocked })] }), _jsx(Zap, { className: "w-10 h-10 text-yellow-500" })] }) }) }), _jsx(Card, { children: _jsx(CardContent, { className: "pt-6", children: _jsxs("div", { className: "flex items-center justify-between", children: [_jsxs("div", { children: [_jsx("p", { className: "text-sm text-gray-600", children: "Achievements" }), _jsxs("p", { className: "text-3xl font-bold", children: [progression.achievementsUnlocked, " / ", progression.totalAchievements] })] }), _jsx(Trophy, { className: "w-10 h-10 text-yellow-500" })] }) }) })] }), _jsxs(Tabs, { defaultValue: "skills", className: "w-full", children: [_jsxs(TabsList, { className: "grid w-full grid-cols-4", children: [_jsxs(TabsTrigger, { value: "skills", children: [_jsx(Star, { className: "w-4 h-4 mr-2" }), "Skill Trees"] }), _jsxs(TabsTrigger, { value: "powers", children: [_jsx(Zap, { className: "w-4 h-4 mr-2" }), "Superpowers"] }), _jsxs(TabsTrigger, { value: "achievements", children: [_jsx(Trophy, { className: "w-4 h-4 mr-2" }), "Achievements"] }), _jsxs(TabsTrigger, { value: "prestige", children: [_jsx(Sparkles, { className: "w-4 h-4 mr-2" }), "Prestige"] })] }), _jsx(TabsContent, { value: "skills", className: "mt-6", children: _jsxs("div", { className: "space-y-4", children: [_jsxs(Card, { children: [_jsx(CardHeader, { children: _jsx(CardTitle, { children: "Select Trait" }) }), _jsx(CardContent, { children: _jsx("div", { className: "grid grid-cols-2 md:grid-cols-4 lg:grid-cols-6 gap-2", children: Object.keys(progression.skillTreeProgress).map((trait) => (_jsxs("button", { onClick: () => setSelectedTrait(trait), className: `p-3 rounded border-2 transition-all ${selectedTrait === trait
                                                        ? 'border-purple-500 bg-purple-50 dark:bg-purple-950'
                                                        : 'border-gray-200 hover:border-purple-300'}`, children: [_jsx("p", { className: "text-sm font-medium truncate", children: trait.replace(/_/g, ' ') }), _jsx(Progress, { value: progression.skillTreeProgress[trait] || 0, className: "h-1 mt-2" })] }, trait))) }) })] }), _jsxs("div", { className: "text-center p-12 border-2 border-dashed rounded-lg", children: [_jsxs("p", { className: "text-gray-500", children: ["Skill Tree Visualizer for ", _jsx("strong", { children: selectedTrait })] }), _jsx("p", { className: "text-sm text-gray-400 mt-2", children: "Connect to API to load skill tree data" })] })] }) }), _jsx(TabsContent, { value: "powers", className: "mt-6", children: _jsxs("div", { className: "text-center p-12 border-2 border-dashed rounded-lg", children: [_jsx(Zap, { className: "w-16 h-16 text-yellow-500 mx-auto mb-4" }), _jsx("p", { className: "text-gray-500", children: "Superpower Display" }), _jsx("p", { className: "text-sm text-gray-400 mt-2", children: "Connect to API to load superpower data" })] }) }), _jsx(TabsContent, { value: "achievements", className: "mt-6", children: _jsxs("div", { className: "text-center p-12 border-2 border-dashed rounded-lg", children: [_jsx(Trophy, { className: "w-16 h-16 text-yellow-500 mx-auto mb-4" }), _jsx("p", { className: "text-gray-500", children: "Achievement Grid" }), _jsx("p", { className: "text-sm text-gray-400 mt-2", children: "Connect to API to load achievement data" })] }) }), _jsx(TabsContent, { value: "prestige", className: "mt-6", children: _jsxs("div", { className: "text-center p-12 border-2 border-dashed rounded-lg", children: [_jsx(Sparkles, { className: "w-16 h-16 text-purple-500 mx-auto mb-4" }), _jsx("p", { className: "text-gray-500", children: "Prestige Panel" }), _jsx("p", { className: "text-sm text-gray-400 mt-2", children: "Connect to API to load prestige data" })] }) })] })] }));
};
